<?xml version="1.0" encoding="utf-8"?>
<api version="1.0" spec="1.0" xmlns:blend="http://schemas.microsoft.com/winjs/Blend/2011" xmlns="http://openajax.org/metadata">
  <author name="Telerik Inc." />
  <class name="Telerik.Data.DataSource">
    <description type="text/plain">Initializes a new instance of the Telerik.Data.DataSource component.</description>
    <constructor>
      <description type="text/plain">Initializes a new instance of the Telerik.Data.DataSource component.</description>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The configuration options for this DataSource component.</description>
      </parameter>
      <returnType datatype="Telerik.Data.DataSource" />
    </constructor>
    <properties>
      <property name="data" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the underlying raw data array.</description>
      </property>
      <property name="schema" datatype="Array" required="false">
        <description type="text/plain">Gets the object that describes the raw data format. Once configured through the constructor options, the schema is read-only.</description>
      </property>
      <property name="transport" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the object that describes how data is loaded from a remote endpoint. Once configured through the constructor options, the transport is read-only.</description>
      </property>
      <property name="type" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the name of a transport with preconfigured settings. Currently only "odata" is supported. Once configured through the constructor options, the transport type is read-only.</description>
        <options>
          <option value="">
          </option>
          <option value="odata">odata</option>
        </options>
      </property>
      <property name="page" datatype="Number" required="false" isInteger="true">
        <description type="text/plain">Gets or sets the page index. Default value is null.</description>
      </property>
      <property name="pageSize" datatype="Number" required="false" isInteger="true">
        <description type="text/plain">Gets or sets the number of items a page of data contains. Default value is null, indicating no paging is used.</description>
      </property>
      <property name="filter" datatype="Object" required="false">
        <description type="text/plain">Gets or sets the filter descriptors. Accepts an object or an array of objects for multiple filter descriptors.</description>
      </property>
      <property name="group" datatype="Object" required="false">
        <description type="text/plain">Gets or sets the group descriptors. Accepts an object or an array of objects for multiple group descriptors.</description>
      </property>
      <property name="sort" datatype="Object" required="false">
        <description type="text/plain">Gets or sets the sort descriptors. Accepts an object or an array of objects for multiple sort descriptors.</description>
      </property>
      <property name="aggregate" datatype="Object" required="false">
        <description type="text/plain">Gets or sets the aggregate descriptors. Accepts an object or an array of objects for multiple aggregate descriptors.</description>
      </property>
      <property name="serverAggregates" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether aggregates should be calculated on the server when a remote endpoint is used.</description>
      </property>
      <property name="serverFiltering" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether filtering should be applied on the server when a remote endpoint is used.</description>
      </property>
      <property name="serverGrouping" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether grouping should be applied on the server when a remote endpoint is used.</description>
      </property>
      <property name="serverPaging" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether paging should be applied on the server when a remote endpoint is used.</description>
      </property>
      <property name="serverSorting" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether sorting should be applied on the server when a remote endpoint is used.</description>
      </property>
      <property name="totalPages" datatype="Number" required="false" isInteger="true">
        <description type="text/plain">Retrieves the number of available pages.</description>
      </property>
      <property name="total" datatype="Number" required="false" isInteger="true">
        <description type="text/plain">Retrieves the total number of data records.</description>
      </property>
      <property name="aggregates" datatype="Object" required="false" hidden="true" readonly="true">
        <description type="text/plain">Retrieves the result of aggregation.</description>
      </property>
      <property name="view" datatype="Array" required="false" hidden="true" readonly="true">
        <description type="text/plain">Gets a view of the data with operations such as sorting, paging, filtering and grouping applied. To ensure data is available, this property should be used from within the change event of the data source, or from a success callback of the promise returned by a data-processing method such as fetch or read.</description>
      </property>
    </properties>
    <events>
      <event name="change" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the underlying data is changed.</description>
      </event>
      <event name="error" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when an error occurs during data retrieval.</description>
      </event>
      <event name="requeststart" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires before a data request is made.</description>
      </event>
    </events>
    <methods>
      <method name="at">
        <description type="text/plain">Returns the data record at the specified index.</description>
        <parameter name="index" datatype="Number" isInteger="true">
          <description type="text/plain">The index of the data record to retrieve.</description>
        </parameter>
        <returnType datatype="Object" />
      </method>
      <method name="fetch">
        <description type="text/plain">Fetches data using the current filter/sort/group/paging information. If data is not available or remote operations 
 are enabled, data is requested through the transport, otherwise operations are executed over the available data.</description>
        <returnType datatype="WinJS.Promise" />
      </method>
      <method name="read">
        <description type="text/plain">Read the data into the DataSource using the transport read definition.</description>
        <returnType datatype="WinJS.Promise" />
      </method>
      <method name="query">
        <description type="text/plain">Executes a query over the data. Available operations are paging, sorting, filtering, grouping. 
 If data is not available or remote operations are enabled, data is requested through the transport. 
 Otherwise operations are executed over the available data.</description>
        <parameter name="options" datatype="Object">
          <description type="text/plain">Configuration options for this query. Contains page, sort, filter, group and aggregate descriptors.</description>
        </parameter>
        <returnType datatype="WinJS.Promise" />
      </method>
    </methods>
  </class>
  <class name="Telerik.UI.Control">
    <description type="text/plain">Serves as a base class for all Telerik.UI controls.</description>
    <constructor>
      <description type="text/plain">Internal use only.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.Control" />
    </constructor>
    <properties>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.WidgetWrapper">
    <ancestor datatype="Telerik.UI.Control" />
    <description type="text/plain">Serves as a base class for all widget wrapper controls.</description>
    <constructor>
      <description type="text/plain">Serves as a base class for all widget wrapper controls.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.WidgetWrapper" />
    </constructor>
    <properties>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.ListBase">
    <ancestor datatype="Telerik.UI.WidgetWrapper" />
    <description type="text/plain">Serves as a base class for the AutoComplete, DropDownList and ComboBox controls. For internal use only.</description>
    <constructor>
      <description type="text/plain">Serves as a base class for the AutoComplete, DropDownList and ComboBox controls. For internal use only.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.ListBase" />
    </constructor>
    <properties>
      <property name="text" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text of the control.</description>
      </property>
      <property name="value" datatype="String" required="false">
        <description type="text/plain">Gets or sets the value of the control. When setting the value, if no item with the specified value exists, the control value will not be set.</description>
      </property>
      <property name="animation" datatype="Object" required="false">
        <description type="text/plain">Gets the animation options to be used for opening/closing the popup.</description>
      </property>
      <property name="autoBind" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets a value indicating whether to bind the widget to the dataSource on initialization.</description>
      </property>
      <property name="dataSource" datatype="Telerik.Data.DataSource" required="false">
        <description type="text/plain">Gets or sets the data source of the control.</description>
      </property>
      <property name="dataTextField" datatype="String" required="false">
        <description type="text/plain">Gets or sets the field of the data item that provides the text content of the list items.</description>
      </property>
      <property name="dataValueField" datatype="String" required="false">
        <description type="text/plain">Gets or sets the field of the data item that provides the value content of the list items.</description>
      </property>
      <property name="delay" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the delay in ms after which the control will start filtering the dataSource.</description>
      </property>
      <property name="enabled" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets the enabled state of the control.</description>
      </property>
      <property name="height" datatype="Number" required="false" defaultValue="200">
        <description type="text/plain">Gets or sets the height of the drop-down list in pixels.</description>
      </property>
      <property name="template" datatype="String" required="false">
        <description type="text/plain">Gets or sets the template to be used for rendering the items in the list.</description>
      </property>
      <property name="ignoreCase" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets a value indicating whether the search should be case sensitive.</description>
      </property>
      <property name="isOpen" datatype="Boolean" required="false">
        <description type="text/plain">Gets a value indicating whether the list container is currently open.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
    <events>
      <event name="change" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the value of the control changes.</description>
      </event>
      <event name="open" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the drop-down list is shown.</description>
      </event>
      <event name="close" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the drop-down list is closed.</description>
      </event>
      <event name="select" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when an item is selected from the drop-down list.</description>
      </event>
      <event name="databinding" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the control is about to databind.</description>
      </event>
      <event name="databound" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires immediately after the control is databound.</description>
      </event>
    </events>
    <methods>
      <method name="dataItem">
        <description type="text/plain">Returns the raw data record at the specified index.</description>
        <parameter name="index" datatype="Number" isInteger="true">
          <description type="text/plain">The zero-based index of the data record to retrieve.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="refresh">
        <description type="text/plain">Re-renders the items in the drop-down list.</description>
        <returnType datatype="*" />
      </method>
      <method name="search">
        <description type="text/plain">Filters the data using the provided parameter and rebinds drop-down list.</description>
        <parameter name="word" datatype="String">
          <description type="text/plain">The value to search for.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="select">
        <description type="text/plain">Selects drop-down list item and sets the text of the combobox control.</description>
        <parameter name="li" datatype="HTMLElement">
          <description type="text/plain">The list item element to select.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="close">
        <description type="text/plain">Closes the drop-down list.</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="Telerik.UI.RadAutoCompleteBox">
    <ancestor datatype="Telerik.UI.ListBase" />
    <description type="text/plain">A textbox providing text suggestions.</description>
    <constructor>
      <description type="text/plain">Creates a new RadAutoCompleteBox control.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.RadAutoCompleteBox" />
    </constructor>
    <properties>
      <property name="text" datatype="String" required="false">
        <description type="text/plain">Gets or sets the value of the autocomplete.</description>
      </property>
      <property name="filter" datatype="String" required="false">
        <description type="text/plain">Gets or sets the type of filtration to use when filtering the data items.</description>
      </property>
      <property name="minLength" datatype="Number" required="false" isInteger="true" defaultValue="1">
        <description type="text/plain">Gets or sets the minimum amount of characters that should be typed before RadAutoCompleteBox queries the dataSource.</description>
      </property>
      <property name="placeholder" datatype="String" required="false">
        <description type="text/plain">Gets or sets the string that appears in the textbox when it has no value.</description>
      </property>
      <property name="autoSuggest" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether RadAutoCompleteBox should automatically auto-type the rest of text.</description>
      </property>
      <property name="highlightFirst" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether RadAutoCompleteBox should automatically highlight the first shown item.</description>
      </property>
      <property name="separator" datatype="String" required="false">
        <description type="text/plain">Gets or sets the separator for completion. Empty by default, allowing for only one completion.</description>
      </property>
      <property name="value" datatype="String" required="false">
        <description type="text/plain">Gets or sets the value of the control. When setting the value, if no item with the specified value exists, the control value will not be set.</description>
      </property>
      <property name="animation" datatype="Object" required="false">
        <description type="text/plain">Gets the animation options to be used for opening/closing the popup.</description>
      </property>
      <property name="autoBind" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets a value indicating whether to bind the widget to the dataSource on initialization.</description>
      </property>
      <property name="dataSource" datatype="Telerik.Data.DataSource" required="false">
        <description type="text/plain">Gets or sets the data source of the control.</description>
      </property>
      <property name="dataTextField" datatype="String" required="false">
        <description type="text/plain">Gets or sets the field of the data item that provides the text content of the list items.</description>
      </property>
      <property name="dataValueField" datatype="String" required="false">
        <description type="text/plain">Gets or sets the field of the data item that provides the value content of the list items.</description>
      </property>
      <property name="delay" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the delay in ms after which the control will start filtering the dataSource.</description>
      </property>
      <property name="enabled" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets the enabled state of the control.</description>
      </property>
      <property name="height" datatype="Number" required="false" defaultValue="200">
        <description type="text/plain">Gets or sets the height of the drop-down list in pixels.</description>
      </property>
      <property name="template" datatype="String" required="false">
        <description type="text/plain">Gets or sets the template to be used for rendering the items in the list.</description>
      </property>
      <property name="ignoreCase" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets a value indicating whether the search should be case sensitive.</description>
      </property>
      <property name="isOpen" datatype="Boolean" required="false">
        <description type="text/plain">Gets a value indicating whether the list container is currently open.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
    <events>
      <event name="open" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the drop-down list of RadAutoComplete is shown.</description>
      </event>
      <event name="close" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the drop-down list of RadAutoComplete is closed.</description>
      </event>
      <event name="select" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when an item is selected from the drop-down list.</description>
      </event>
      <event name="change" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the value of the RadAutoComplete changes.</description>
      </event>
      <event name="databinding" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the control is about to databind.</description>
      </event>
      <event name="databound" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires immediately after the control is databound.</description>
      </event>
    </events>
    <methods>
      <method name="suggest">
        <description type="text/plain">Forces a suggestion onto the text of the AutoComplete.</description>
        <parameter name="value" datatype="String">
          <description type="text/plain">Characters to force a suggestion.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="dataItem">
        <description type="text/plain">Returns the raw data record at the specified index.</description>
        <parameter name="index" datatype="Number" isInteger="true">
          <description type="text/plain">The zero-based index of the data record to retrieve.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="refresh">
        <description type="text/plain">Re-renders the items in the drop-down list.</description>
        <returnType datatype="*" />
      </method>
      <method name="search">
        <description type="text/plain">Filters the data using the provided parameter and rebinds drop-down list.</description>
        <parameter name="word" datatype="String">
          <description type="text/plain">The value to search for.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="select">
        <description type="text/plain">Selects drop-down list item and sets the text of the combobox control.</description>
        <parameter name="li" datatype="HTMLElement">
          <description type="text/plain">The list item element to select.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="close">
        <description type="text/plain">Closes the drop-down list.</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="Telerik.UI.RadChart">
    <ancestor datatype="Telerik.UI.WidgetWrapper" />
    <description type="text/plain">A charting control that can visualize different chart types.</description>
    <constructor>
      <description type="text/plain">Creates a new RadChart control.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.RadChart" />
    </constructor>
    <properties>
      <property name="dataSource" datatype="Telerik.Data.DataSource" required="false">
        <description type="text/plain">Gets or sets the data source object for this control.</description>
      </property>
      <property name="transitions" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Enables or disables transitions. True by default.</description>
      </property>
      <property name="theme" datatype="String" required="false">
        <description type="text/plain">Gets or sets the visual theme of the chart.</description>
      </property>
      <property name="seriesColors" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the color collection that will be used for styling the chart series. Array elements must be valid CSS color definitions.</description>
      </property>
      <property name="background" datatype="String" required="false">
        <description type="text/plain">Gets or sets the background of the chart area.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings of the chart area.</description>
      </property>
      <property name="width" datatype="Number" required="false" defaultValue="600">
        <description type="text/plain">Gets or sets the width of the chart area in pixels.</description>
      </property>
      <property name="height" datatype="Number" required="false" defaultValue="400">
        <description type="text/plain">Gets or sets the height of the chart area in pixels.</description>
      </property>
      <property name="margin" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the margin settings of the chart area.</description>
      </property>
      <property name="title" datatype="Telerik.UI.Chart._TitleConfiguration" required="false">
        <description type="text/plain">Gets the title settings of the chart.</description>
      </property>
      <property name="legend" datatype="Telerik.UI.Chart._LegendConfiguration" required="false">
        <description type="text/plain">Gets the legend settings of the chart.</description>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Chart._TooltipConfiguration" required="false">
        <description type="text/plain">Gets the tooltip settings of the chart.</description>
      </property>
      <property name="plotArea" datatype="Telerik.UI.Chart._PlotAreaConfiguration" required="false">
        <description type="text/plain">Gets the plot are settings.</description>
      </property>
      <property name="axisDefaults" datatype="Telerik.UI.Chart._AxisConfiguration" required="false">
        <description type="text/plain">Gets the default settings that apply to all axes.</description>
      </property>
      <property name="valueAxis" datatype="Telerik.UI.Chart._AxisConfiguration" required="false">
        <description type="text/plain">Gets the value axis settings.</description>
      </property>
      <property name="categoryAxis" datatype="Telerik.UI.Chart._CategoryAxisConfiguration" required="false">
        <description type="text/plain">Gets the category axis settings.</description>
      </property>
      <property name="xAxis" datatype="Telerik.UI.Chart._AxisConfiguration" required="false">
        <description type="text/plain">Gets the X axis settings when a scatter chart type is used.</description>
      </property>
      <property name="yAxis" datatype="Telerik.UI.Chart._AxisConfiguration" required="false">
        <description type="text/plain">Gets the Y axis settings when a scatter chart type is used.</description>
      </property>
      <property name="seriesDefaults" datatype="Telerik.UI.Chart.Series" required="false">
        <description type="text/plain">Gets the default settings common to all series.</description>
      </property>
      <property name="series" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the data series in the chart.</description>
      </property>
      <property name="svg" datatype="String" required="false" hidden="true" readonly="true">
        <description type="text/plain">Gets the SVG representation of the current chart.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
    <events>
      <event name="databound" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires immediately after the control is databound.</description>
      </event>
      <event name="seriesclick" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when any of the chart series is clicked.</description>
      </event>
      <event name="serieshover" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when any of the chart series is hovered.</description>
      </event>
      <event name="axislabelclick" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when an axis label is clicked.</description>
      </event>
      <event name="plotareaclick" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the plot area is clicked.</description>
      </event>
    </events>
    <methods>
      <method name="refresh">
        <description type="text/plain">Reloads the data and repaints the chart.</description>
        <returnType datatype="*" />
      </method>
      <method name="redraw">
        <description type="text/plain">Repaints the chart.</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="Telerik.UI.RadComboBox">
    <ancestor datatype="Telerik.UI.ListBase" />
    <description type="text/plain">An input control that allows selecting one of some predefined values from a drop-down or entering a custom value.</description>
    <constructor>
      <description type="text/plain">Creates a new RadComboBox control.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.RadComboBox" />
    </constructor>
    <properties>
      <property name="index" datatype="Number" required="false" isInteger="true">
        <description type="text/plain">Gets or sets the zero-based index of the selected item.</description>
      </property>
      <property name="filter" datatype="String" required="false">
        <description type="text/plain">Gets or sets the type of filtration to use when filtering the data items.</description>
      </property>
      <property name="minLength" datatype="Number" required="false" isInteger="true">
        <description type="text/plain">Gets or sets the minimum amount of characters that should be typed before RadComboBox queries the dataSource.</description>
      </property>
      <property name="placeholder" datatype="String" required="false">
        <description type="text/plain">Gets or sets the string that appears in the textbox when it has no value.</description>
      </property>
      <property name="autoSuggest" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether RadComboBox should automatically auto-type the rest of text.</description>
      </property>
      <property name="highlightFirst" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether RadComboBox should automatically highlight the first shown item.</description>
      </property>
      <property name="text" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text of the control.</description>
      </property>
      <property name="value" datatype="String" required="false">
        <description type="text/plain">Gets or sets the value of the control. When setting the value, if no item with the specified value exists, the control value will not be set.</description>
      </property>
      <property name="animation" datatype="Object" required="false">
        <description type="text/plain">Gets the animation options to be used for opening/closing the popup.</description>
      </property>
      <property name="autoBind" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets a value indicating whether to bind the widget to the dataSource on initialization.</description>
      </property>
      <property name="dataSource" datatype="Telerik.Data.DataSource" required="false">
        <description type="text/plain">Gets or sets the data source of the control.</description>
      </property>
      <property name="dataTextField" datatype="String" required="false">
        <description type="text/plain">Gets or sets the field of the data item that provides the text content of the list items.</description>
      </property>
      <property name="dataValueField" datatype="String" required="false">
        <description type="text/plain">Gets or sets the field of the data item that provides the value content of the list items.</description>
      </property>
      <property name="delay" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the delay in ms after which the control will start filtering the dataSource.</description>
      </property>
      <property name="enabled" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets the enabled state of the control.</description>
      </property>
      <property name="height" datatype="Number" required="false" defaultValue="200">
        <description type="text/plain">Gets or sets the height of the drop-down list in pixels.</description>
      </property>
      <property name="template" datatype="String" required="false">
        <description type="text/plain">Gets or sets the template to be used for rendering the items in the list.</description>
      </property>
      <property name="ignoreCase" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets a value indicating whether the search should be case sensitive.</description>
      </property>
      <property name="isOpen" datatype="Boolean" required="false">
        <description type="text/plain">Gets a value indicating whether the list container is currently open.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
    <events>
      <event name="open" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the drop-down list of RadAutoComplete is shown.</description>
      </event>
      <event name="close" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the drop-down list of RadAutoComplete is closed.</description>
      </event>
      <event name="select" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when an item is selected from the drop-down list.</description>
      </event>
      <event name="change" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the value of the RadAutoComplete changes.</description>
      </event>
      <event name="databinding" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the control is about to databind.</description>
      </event>
      <event name="databound" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires immediately after the control is databound.</description>
      </event>
    </events>
    <methods>
      <method name="open">
        <description type="text/plain">Opens the drop-down list.</description>
        <returnType datatype="*" />
      </method>
      <method name="toggle">
        <description type="text/plain">Toggles the drop-down list between its open and closed state.</description>
        <parameter name="toggle" datatype="Boolean">
          <description type="text/plain">Optional. Specifies whether to open or close the drop-down list.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="suggest">
        <description type="text/plain">Forces a suggestion onto the text of the combobox.</description>
        <parameter name="value" datatype="String">
          <description type="text/plain">Characters to force a suggestion.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="dataItem">
        <description type="text/plain">Returns the raw data record at the specified index.</description>
        <parameter name="index" datatype="Number" isInteger="true">
          <description type="text/plain">The zero-based index of the data record to retrieve.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="refresh">
        <description type="text/plain">Re-renders the items in the drop-down list.</description>
        <returnType datatype="*" />
      </method>
      <method name="search">
        <description type="text/plain">Filters the data using the provided parameter and rebinds drop-down list.</description>
        <parameter name="word" datatype="String">
          <description type="text/plain">The value to search for.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="select">
        <description type="text/plain">Selects drop-down list item and sets the text of the combobox control.</description>
        <parameter name="li" datatype="HTMLElement">
          <description type="text/plain">The list item element to select.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="close">
        <description type="text/plain">Closes the drop-down list.</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="Telerik.UI.RadDatePicker">
    <ancestor datatype="Telerik.UI.DateTimePickers._DateTimePicker" />
    <description type="text/plain">Allows the selection of a date value from maximum three different components: year/month/day via intuitive and easy to use vertical looping lists that show in a popup.</description>
    <constructor>
      <description type="text/plain">Create a new RadDatePicker control that allows selection of a date using year/month/day pickers.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.RadDatePicker" />
    </constructor>
    <properties>
      <property name="value" datatype="Date" required="false">
        <description type="text/plain">Gets or sets the value of the picker. (Only the date/time part of the Date object will be applied.) It can be null/undefined (not set).</description>
      </property>
      <property name="valueString" datatype="String" required="false" readonly="true">
        <description type="text/plain">Gets the string representation of the current value.  The string representation is the current value formatted  according to the settings of the device and the control.</description>
      </property>
      <property name="minValue" datatype="Date" required="false">
        <description type="text/plain">Gets or sets the minimum value of the value range for the control. (Only the date/time part of the Date object will be applied.)</description>
      </property>
      <property name="maxValue" datatype="Date" required="false">
        <description type="text/plain">Gets or sets the maximum value of the value range for the control. (Only the date/time part of the Date object will be applied.)</description>
      </property>
      <property name="itemCount" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the number of items visible within the selector part of the control. This property is used to determine the height of the selector part when opened.  The calculated height will not exceed the height of the view port. Pass non-positive value to stretch the selector vertically.</description>
      </property>
      <property name="itemLength" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the length (width and height) of the items that appear in the selector part of the control.</description>
      </property>
      <property name="itemSpacing" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the spacing between the items that appear in the selector part of the control. This propery also determines the spacing between the different  parts of the selector, e.g. lists, buttons, header.</description>
      </property>
      <property name="selectorFormat" datatype="String" required="false">
        <description type="text/plain">Gets or sets the selector format. This value defines how the different selector components will be ordered.  By setting this property, you can also define which editable parts of the selector will be visible.  For example �y/m� will display the Year and Month components in a DatePicker. Valid values are: * h - hour, m - minute, t - period [AM/PM] if applicable for a TimePicker; * y - year, m - month, d - dat for a DatePicker;</description>
      </property>
      <property name="selectorDefaultValue" datatype="Date" required="false">
        <description type="text/plain">Gets or sets the value that represents the default value displayed in the selector part.  The default value is shown when the value property is not set (null/undefined). If no default value is specified, the current date/time on the system is displayed when the selector opens.</description>
      </property>
      <property name="isSelectorOpen" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value determining whether the selector part of the control is open.</description>
      </property>
      <property name="isReadOnly" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value determining whether the control is in read only mode.  If set to true, the control does not allow the user to modify its value.</description>
      </property>
      <property name="displayValueFormat" datatype="String" required="false">
        <description type="text/plain">Gets or sets a string representing the value format for the control.  The value format determines how the edited value is displayed on the screen after it has been selected.  If not set, the format from the current system clock configuration is used.</description>
      </property>
      <property name="autoSizeWidth" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether the control will automatically calculate its picker width, so that it equals the width of the selector part.</description>
      </property>
      <property name="enabled" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether the control is enabled (default).</description>
      </property>
      <property name="itemTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets a value determining how the items in all lists in the selector will be rendered. With this propery the default template can be overriden. Internally all items are bound to a data object having two fields: 'value' and 'label'. These correspond to the number of year, month, hour, etc. and to the name of the month, day and whether the year is leap respectively. In order to utilize either or both of the data object properties the template should have mappings to them, e.g. #= value #'#= label #'</description>
      </property>
      <property name="selectorHeader" datatype="Object" required="false">
        <description type="text/plain">Gets or sets the header displayed in the selector. By default the 'Select Date' text is shown. This property value can be either a string or a data object. If the value is an object, the selectorHeaderTemplate property must also be set to specify which properties of the object will be rendered.</description>
      </property>
      <property name="selectorHeaderTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets a value determining how the selectorHeader property value will be rendered. If the selectorHeader property is of a primitive type, this property should not be set -  the value will render as text. If the selectorHeader is an object the template should specify mappings in the form #= objectPropertyName #. Example: #= value # provided that the selectorHeader property is set to { value: 'Header Text' }.</description>
      </property>
      <property name="header" datatype="Object" required="false">
        <description type="text/plain">Gets or sets the object that represents the header content. This property value can be either a string or a data object. If the value is an object, the headerTemplate property must also be set to specify which properties of the object will be rendered.</description>
      </property>
      <property name="headerTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets a value determining how the header property value will be rendered. If the header property is of a primitive type, this property should not be set -  the value will render as text. If the header is an object the template should specify mappings in the form #= objectPropertyName #. Example: #= value # provided that the header property is set to { value: 'Header Text' }.</description>
      </property>
      <property name="emptyContent" datatype="Object" required="false">
        <description type="text/plain">Gets or sets the empty content of the picker part of the control.  The empty content is displayed when there is no value defined. This property value can be either a string or a data object. If the value is an object, the headerTemplate property must also be set to specify which properties of the object will be rendered.</description>
      </property>
      <property name="emptyContentTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets a value determining how the emptyContent property value will be rendered. If the emptyContent property is of a primitive type, this property should not be set -  the value will render as text. If the emptyContent is an object the template should specify mappins in the form #= objectPropertyName #. Example: #= value # provided that the emptyContent property is set to { value: 'Empty' }.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
    <events>
      <event name="open" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires after the selector popup opens.</description>
      </event>
      <event name="close" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires after the selecotr popup closes.</description>
      </event>
      <event name="change" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the date is changed via the selector.</description>
      </event>
    </events>
  </class>
  <class name="Telerik.UI.RadTimePicker">
    <ancestor datatype="Telerik.UI.DateTimePickers._DateTimePicker" />
    <description type="text/plain">Allows the selection of a time value from maximum three different components: hour/minute/perio via intuitive and easy to use vertical looping lists that show in a popup.</description>
    <constructor>
      <description type="text/plain">Create a new RadDatePicker control that allows selection of a time using hour/minute/period pickers.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element that hosts this control.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.RadTimePicker" />
    </constructor>
    <properties>
      <property name="value" datatype="Date" required="false">
        <description type="text/plain">Gets or sets the value of the picker. (Only the date/time part of the Date object will be applied.) It can be null/undefined (not set).</description>
      </property>
      <property name="valueString" datatype="String" required="false" readonly="true">
        <description type="text/plain">Gets the string representation of the current value.  The string representation is the current value formatted  according to the settings of the device and the control.</description>
      </property>
      <property name="minValue" datatype="Date" required="false">
        <description type="text/plain">Gets or sets the minimum value of the value range for the control. (Only the date/time part of the Date object will be applied.)</description>
      </property>
      <property name="maxValue" datatype="Date" required="false">
        <description type="text/plain">Gets or sets the maximum value of the value range for the control. (Only the date/time part of the Date object will be applied.)</description>
      </property>
      <property name="itemCount" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the number of items visible within the selector part of the control. This property is used to determine the height of the selector part when opened.  The calculated height will not exceed the height of the view port. Pass non-positive value to stretch the selector vertically.</description>
      </property>
      <property name="itemLength" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the length (width and height) of the items that appear in the selector part of the control.</description>
      </property>
      <property name="itemSpacing" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the spacing between the items that appear in the selector part of the control. This propery also determines the spacing between the different  parts of the selector, e.g. lists, buttons, header.</description>
      </property>
      <property name="selectorFormat" datatype="String" required="false">
        <description type="text/plain">Gets or sets the selector format. This value defines how the different selector components will be ordered.  By setting this property, you can also define which editable parts of the selector will be visible.  For example �y/m� will display the Year and Month components in a DatePicker. Valid values are: * h - hour, m - minute, t - period [AM/PM] if applicable for a TimePicker; * y - year, m - month, d - dat for a DatePicker;</description>
      </property>
      <property name="selectorDefaultValue" datatype="Date" required="false">
        <description type="text/plain">Gets or sets the value that represents the default value displayed in the selector part.  The default value is shown when the value property is not set (null/undefined). If no default value is specified, the current date/time on the system is displayed when the selector opens.</description>
      </property>
      <property name="isSelectorOpen" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value determining whether the selector part of the control is open.</description>
      </property>
      <property name="isReadOnly" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value determining whether the control is in read only mode.  If set to true, the control does not allow the user to modify its value.</description>
      </property>
      <property name="displayValueFormat" datatype="String" required="false">
        <description type="text/plain">Gets or sets a string representing the value format for the control.  The value format determines how the edited value is displayed on the screen after it has been selected.  If not set, the format from the current system clock configuration is used.</description>
      </property>
      <property name="autoSizeWidth" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether the control will automatically calculate its picker width, so that it equals the width of the selector part.</description>
      </property>
      <property name="enabled" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether the control is enabled (default).</description>
      </property>
      <property name="itemTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets a value determining how the items in all lists in the selector will be rendered. With this propery the default template can be overriden. Internally all items are bound to a data object having two fields: 'value' and 'label'. These correspond to the number of year, month, hour, etc. and to the name of the month, day and whether the year is leap respectively. In order to utilize either or both of the data object properties the template should have mappings to them, e.g. #= value #'#= label #'</description>
      </property>
      <property name="selectorHeader" datatype="Object" required="false">
        <description type="text/plain">Gets or sets the header displayed in the selector. By default the 'Select Date' text is shown. This property value can be either a string or a data object. If the value is an object, the selectorHeaderTemplate property must also be set to specify which properties of the object will be rendered.</description>
      </property>
      <property name="selectorHeaderTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets a value determining how the selectorHeader property value will be rendered. If the selectorHeader property is of a primitive type, this property should not be set -  the value will render as text. If the selectorHeader is an object the template should specify mappings in the form #= objectPropertyName #. Example: #= value # provided that the selectorHeader property is set to { value: 'Header Text' }.</description>
      </property>
      <property name="header" datatype="Object" required="false">
        <description type="text/plain">Gets or sets the object that represents the header content. This property value can be either a string or a data object. If the value is an object, the headerTemplate property must also be set to specify which properties of the object will be rendered.</description>
      </property>
      <property name="headerTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets a value determining how the header property value will be rendered. If the header property is of a primitive type, this property should not be set -  the value will render as text. If the header is an object the template should specify mappings in the form #= objectPropertyName #. Example: #= value # provided that the header property is set to { value: 'Header Text' }.</description>
      </property>
      <property name="emptyContent" datatype="Object" required="false">
        <description type="text/plain">Gets or sets the empty content of the picker part of the control.  The empty content is displayed when there is no value defined. This property value can be either a string or a data object. If the value is an object, the headerTemplate property must also be set to specify which properties of the object will be rendered.</description>
      </property>
      <property name="emptyContentTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets a value determining how the emptyContent property value will be rendered. If the emptyContent property is of a primitive type, this property should not be set -  the value will render as text. If the emptyContent is an object the template should specify mappins in the form #= objectPropertyName #. Example: #= value # provided that the emptyContent property is set to { value: 'Empty' }.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
    <events>
      <event name="open" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires after the selector popup opens.</description>
      </event>
      <event name="close" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires after the selecotr popup closes.</description>
      </event>
      <event name="change" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the time is changed via the selector.</description>
      </event>
    </events>
  </class>
  <class name="Telerik.UI.RadDropDownList">
    <ancestor datatype="Telerik.UI.ListBase" />
    <description type="text/plain">Allows selection of a single value from a list in a dropdown.</description>
    <constructor>
      <description type="text/plain">Creates a new RadDropDownList control.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.RadDropDownList" />
    </constructor>
    <properties>
      <property name="index" datatype="Number" required="false" isInteger="true">
        <description type="text/plain">Gets or sets the zero-based index of the selected item.</description>
      </property>
      <property name="optionLabel" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text of the default empty item.</description>
      </property>
      <property name="text" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text of the control.</description>
      </property>
      <property name="value" datatype="String" required="false">
        <description type="text/plain">Gets or sets the value of the control. When setting the value, if no item with the specified value exists, the control value will not be set.</description>
      </property>
      <property name="animation" datatype="Object" required="false">
        <description type="text/plain">Gets the animation options to be used for opening/closing the popup.</description>
      </property>
      <property name="autoBind" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets a value indicating whether to bind the widget to the dataSource on initialization.</description>
      </property>
      <property name="dataSource" datatype="Telerik.Data.DataSource" required="false">
        <description type="text/plain">Gets or sets the data source of the control.</description>
      </property>
      <property name="dataTextField" datatype="String" required="false">
        <description type="text/plain">Gets or sets the field of the data item that provides the text content of the list items.</description>
      </property>
      <property name="dataValueField" datatype="String" required="false">
        <description type="text/plain">Gets or sets the field of the data item that provides the value content of the list items.</description>
      </property>
      <property name="delay" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the delay in ms after which the control will start filtering the dataSource.</description>
      </property>
      <property name="enabled" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets the enabled state of the control.</description>
      </property>
      <property name="height" datatype="Number" required="false" defaultValue="200">
        <description type="text/plain">Gets or sets the height of the drop-down list in pixels.</description>
      </property>
      <property name="template" datatype="String" required="false">
        <description type="text/plain">Gets or sets the template to be used for rendering the items in the list.</description>
      </property>
      <property name="ignoreCase" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets a value indicating whether the search should be case sensitive.</description>
      </property>
      <property name="isOpen" datatype="Boolean" required="false">
        <description type="text/plain">Gets a value indicating whether the list container is currently open.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
    <events>
      <event name="open" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the drop-down list of RadAutoComplete is shown.</description>
      </event>
      <event name="close" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the drop-down list of RadAutoComplete is closed.</description>
      </event>
      <event name="select" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when an item is selected from the drop-down list.</description>
      </event>
      <event name="change" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the value of the RadAutoComplete changes.</description>
      </event>
      <event name="databinding" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the control is about to databind.</description>
      </event>
      <event name="databound" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires immediately after the control is databound.</description>
      </event>
    </events>
    <methods>
      <method name="open">
        <description type="text/plain">Opens the drop-down list.</description>
        <returnType datatype="*" />
      </method>
      <method name="search">
        <description type="text/plain">Selects the item that starts with the specified substring.</description>
        <parameter name="word" datatype="String">
          <description type="text/plain">The value to search by.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="toggle">
        <description type="text/plain">Toggles the drop-down list between its open and closed state.</description>
        <parameter name="toggle" datatype="Boolean">
          <description type="text/plain">Optional. Specifies whether to open or close the drop-down list.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="dataItem">
        <description type="text/plain">Returns the raw data record at the specified index.</description>
        <parameter name="index" datatype="Number" isInteger="true">
          <description type="text/plain">The zero-based index of the data record to retrieve.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="refresh">
        <description type="text/plain">Re-renders the items in the drop-down list.</description>
        <returnType datatype="*" />
      </method>
      <method name="select">
        <description type="text/plain">Selects drop-down list item and sets the text of the combobox control.</description>
        <parameter name="li" datatype="HTMLElement">
          <description type="text/plain">The list item element to select.</description>
        </parameter>
        <returnType datatype="*" />
      </method>
      <method name="close">
        <description type="text/plain">Closes the drop-down list.</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="Telerik.UI.RadGauge">
    <ancestor datatype="Telerik.UI.WidgetWrapper" />
    <description type="text/plain">A base class for the RadLinearGauge and RadRadialGauge controls.</description>
    <constructor>
      <description type="text/plain">A base class for the RadLinearGauge and RadRadialGauge controls.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.RadGauge" />
    </constructor>
    <properties>
      <property name="theme" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name of the visual theme applied to the gauge.</description>
      </property>
      <property name="background" datatype="String" required="false">
        <description type="text/plain">Gets or sets the background of the gauge area. Any valid CSS color string is accepted.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings of the gauge area.</description>
      </property>
      <property name="width" datatype="Number" required="false">
        <description type="text/plain">Gets the width of the gauge area.</description>
      </property>
      <property name="height" datatype="Number" required="false">
        <description type="text/plain">Gets the height of the gauge area.</description>
      </property>
      <property name="margin" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the margin of the gauge area.</description>
      </property>
      <property name="transitions" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Enables or disables transitions. True by default.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Gauge._LabelConfiguration" required="false">
        <description type="text/plain">Retrieves the label settings for this gauge.</description>
      </property>
      <property name="minorUnit" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the interval between minor divisions</description>
      </property>
      <property name="majorUnit" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the interval between major divisions</description>
      </property>
      <property name="min" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the minimum value of the scale.</description>
      </property>
      <property name="max" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the maximum value of the scale.</description>
      </property>
      <property name="reverse" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether the axis direction is reversed. Reversed axis values increase from right to left and from top to bottom.</description>
      </property>
      <property name="majorTicks" datatype="Telerik.UI.Gauge._TickConfiguration" required="false">
        <description type="text/plain">Retrieves the major tick settings.</description>
      </property>
      <property name="minorTicks" datatype="Telerik.UI.Gauge._TickConfiguration" required="false">
        <description type="text/plain">Retrieves the minor tick settings.</description>
      </property>
      <property name="ranges" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of ranges that will appear on the scale.</description>
      </property>
      <property name="rangeSize" datatype="Number" required="false">
        <description type="text/plain">The width of the ranges that will appear on the scale. If the property is not set, it will be calculated to 10% of the scale radius.</description>
      </property>
      <property name="svg" datatype="String" required="false" hidden="true">
        <description type="text/plain">Gets the SVG representation of the current gauge.</description>
      </property>
      <property name="value" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the current gauge value.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
    <methods>
      <method name="redraw">
        <description type="text/plain">Redraws the gauge.</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="Telerik.UI.RadLinearGauge">
    <ancestor datatype="Telerik.UI.RadGauge" />
    <description type="text/plain">A linear gauge control that can visualize a value on a linear scale.</description>
    <constructor>
      <description type="text/plain">Creates a new RadLinearGauge control.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.RadLinearGauge" />
    </constructor>
    <properties>
      <property name="mirror" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether the scale labels and ticks are mirrored. Mirroring the scale will render the labels and ticks on the opposite side.</description>
      </property>
      <property name="vertical" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the position of the gauge.</description>
      </property>
      <property name="pointer" datatype="Telerik.UI.Gauge._LinearPointerConfiguration" required="false">
        <description type="text/plain">Retrieves the gauge pointer settings.</description>
      </property>
      <property name="theme" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name of the visual theme applied to the gauge.</description>
      </property>
      <property name="background" datatype="String" required="false">
        <description type="text/plain">Gets or sets the background of the gauge area. Any valid CSS color string is accepted.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings of the gauge area.</description>
      </property>
      <property name="width" datatype="Number" required="false">
        <description type="text/plain">Gets the width of the gauge area.</description>
      </property>
      <property name="height" datatype="Number" required="false">
        <description type="text/plain">Gets the height of the gauge area.</description>
      </property>
      <property name="margin" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the margin of the gauge area.</description>
      </property>
      <property name="transitions" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Enables or disables transitions. True by default.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Gauge._LabelConfiguration" required="false">
        <description type="text/plain">Retrieves the label settings for this gauge.</description>
      </property>
      <property name="minorUnit" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the interval between minor divisions</description>
      </property>
      <property name="majorUnit" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the interval between major divisions</description>
      </property>
      <property name="min" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the minimum value of the scale.</description>
      </property>
      <property name="max" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the maximum value of the scale.</description>
      </property>
      <property name="reverse" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether the axis direction is reversed. Reversed axis values increase from right to left and from top to bottom.</description>
      </property>
      <property name="majorTicks" datatype="Telerik.UI.Gauge._TickConfiguration" required="false">
        <description type="text/plain">Retrieves the major tick settings.</description>
      </property>
      <property name="minorTicks" datatype="Telerik.UI.Gauge._TickConfiguration" required="false">
        <description type="text/plain">Retrieves the minor tick settings.</description>
      </property>
      <property name="ranges" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of ranges that will appear on the scale.</description>
      </property>
      <property name="rangeSize" datatype="Number" required="false">
        <description type="text/plain">The width of the ranges that will appear on the scale. If the property is not set, it will be calculated to 10% of the scale radius.</description>
      </property>
      <property name="svg" datatype="String" required="false" hidden="true">
        <description type="text/plain">Gets the SVG representation of the current gauge.</description>
      </property>
      <property name="value" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the current gauge value.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
    <methods>
      <method name="redraw">
        <description type="text/plain">Redraws the gauge.</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="Telerik.UI.RadRadialGauge">
    <ancestor datatype="Telerik.UI.RadGauge" />
    <description type="text/plain">A radial gauge control that can visualize a value on a radial scale.</description>
    <constructor>
      <description type="text/plain">Creates a new RadRadialGauge control.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.RadRadialGauge" />
    </constructor>
    <properties>
      <property name="rangeDistance" datatype="Number" required="false">
        <description type="text/plain">The distance of ranges from the edge of the scale. If this property is not set, it will be calculated to 5% of the scale radius.</description>
      </property>
      <property name="startAngle" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the start angle of the gauge scale. The scale is rendered clockwise, where a start angle of 0 is equal to 180 degrees in the polar coordinate system.</description>
      </property>
      <property name="endAngle" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the end angle of the gauge scale. The scale is rendered clockwise, where a start angle of 0 is equal to 180 degrees in the polar coordinate system.</description>
      </property>
      <property name="pointer" datatype="Telerik.UI.Gauge._RadialPointerConfiguration" required="false">
        <description type="text/plain">Retrieves the gauge pointer settings.</description>
      </property>
      <property name="theme" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name of the visual theme applied to the gauge.</description>
      </property>
      <property name="background" datatype="String" required="false">
        <description type="text/plain">Gets or sets the background of the gauge area. Any valid CSS color string is accepted.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings of the gauge area.</description>
      </property>
      <property name="width" datatype="Number" required="false">
        <description type="text/plain">Gets the width of the gauge area.</description>
      </property>
      <property name="height" datatype="Number" required="false">
        <description type="text/plain">Gets the height of the gauge area.</description>
      </property>
      <property name="margin" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the margin of the gauge area.</description>
      </property>
      <property name="transitions" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Enables or disables transitions. True by default.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Gauge._LabelConfiguration" required="false">
        <description type="text/plain">Retrieves the label settings for this gauge.</description>
      </property>
      <property name="minorUnit" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the interval between minor divisions</description>
      </property>
      <property name="majorUnit" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the interval between major divisions</description>
      </property>
      <property name="min" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the minimum value of the scale.</description>
      </property>
      <property name="max" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the maximum value of the scale.</description>
      </property>
      <property name="reverse" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether the axis direction is reversed. Reversed axis values increase from right to left and from top to bottom.</description>
      </property>
      <property name="majorTicks" datatype="Telerik.UI.Gauge._TickConfiguration" required="false">
        <description type="text/plain">Retrieves the major tick settings.</description>
      </property>
      <property name="minorTicks" datatype="Telerik.UI.Gauge._TickConfiguration" required="false">
        <description type="text/plain">Retrieves the minor tick settings.</description>
      </property>
      <property name="ranges" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of ranges that will appear on the scale.</description>
      </property>
      <property name="rangeSize" datatype="Number" required="false">
        <description type="text/plain">The width of the ranges that will appear on the scale. If the property is not set, it will be calculated to 10% of the scale radius.</description>
      </property>
      <property name="svg" datatype="String" required="false" hidden="true">
        <description type="text/plain">Gets the SVG representation of the current gauge.</description>
      </property>
      <property name="value" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the current gauge value.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
    <methods>
      <method name="redraw">
        <description type="text/plain">Redraws the gauge.</description>
        <returnType datatype="*" />
      </method>
    </methods>
  </class>
  <class name="Telerik.UI.RadNumericBox">
    <ancestor datatype="Telerik.UI.WidgetWrapper" />
    <description type="text/plain">A textbox control for numeric input.</description>
    <constructor>
      <description type="text/plain">Creates a new RadNumericBox control.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.RadNumericBox" />
    </constructor>
    <properties>
      <property name="enabled" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the enabled state of the control.</description>
      </property>
      <property name="value" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the current numeric value.</description>
      </property>
      <property name="decimals" datatype="Number" required="false" isInteger="true">
        <description type="text/plain">Gets or sets the number precision. If not set precision defined by current culture is returned.</description>
      </property>
      <property name="format" datatype="String" required="false">
        <description type="text/plain">Gets or sets the format of the number. Any valid number format is allowed.</description>
      </property>
      <property name="min" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the smallest value the user can enter.</description>
      </property>
      <property name="max" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the largest value the user can enter.</description>
      </property>
      <property name="step" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the increment/decrement step.</description>
      </property>
      <property name="placeholder" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text displayed when the input is empty.</description>
      </property>
      <property name="incrementTooltip" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text of tooltip on the increment button.</description>
      </property>
      <property name="decrementTooltip" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text of tooltip on the decrement button.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
    <events>
      <event name="change" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the value of RadNumericBox changes.</description>
      </event>
      <event name="spin" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when any of the increment/decrement buttons is clicked.</description>
      </event>
    </events>
  </class>
  <class name="Telerik.UI.SliderBase">
    <ancestor datatype="Telerik.UI.WidgetWrapper" />
    <description type="text/plain">A base class for the RadRangeSlider and RadSlider controls.</description>
    <constructor>
      <description type="text/plain">A base class for the RadRangeSlider and RadSlider controls.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.SliderBase" />
    </constructor>
    <properties>
      <property name="enabled" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the enabled state of the control.</description>
      </property>
      <property name="largeStep" datatype="Number" required="false" isInteger="true">
        <description type="text/plain">Gets or sets the delta with which the value changes when the user presses PageUp or PageDown (the drag handle must be focused).</description>
      </property>
      <property name="smallStep" datatype="Number" required="false" isInteger="true">
        <description type="text/plain">Gets or sets the small step value of the slider. The slider value will change when the end user (1) clicks on the increase/decrease buttons, (2) presses the arrow keys (the drag handle must be focused), or (3) drags the drag handle.</description>
      </property>
      <property name="min" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the minimum value of the slider.</description>
      </property>
      <property name="max" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the maximum value of the slider.</description>
      </property>
      <property name="orientation" datatype="String" required="false">
        <description type="text/plain">Gets or sets the orientation of the slider. Allowed values are "horizontal" or "vertical". Default value is "horizontal".</description>
        <options>
          <option value="horizontal">horizontal</option>
          <option value="vertical">vertical</option>
        </options>
      </property>
      <property name="tickPlacement" datatype="String" required="false">
        <description type="text/plain">Gets or sets the location of the tick marks in the slider. The available options are "minorOutside", "minorMajorOutside", "inside" and "none". Default value is "minorMajorOutside".</description>
        <options>
          <option value="minorMajorOutside">minorMajorOutside</option>
          <option value="minorOutside">minorOutside</option>
          <option value="inside">inside</option>
          <option value="none">none</option>
        </options>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Slider._TooltipConfiguration" required="false">
        <description type="text/plain">Gets the configuration settings for the slider tooltip.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.RadSlider">
    <ancestor datatype="Telerik.UI.SliderBase" />
    <description type="text/plain">A slider control for selecting values.</description>
    <constructor>
      <description type="text/plain">Creates a new RadSlider control.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.RadSlider" />
    </constructor>
    <properties>
      <property name="value" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the value of the slider.</description>
      </property>
      <property name="showButtons" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets whether the increase and decrease buttons should be shown.</description>
      </property>
      <property name="increaseButtonTooltip" datatype="String" required="false">
        <description type="text/plain">Gets or sets the tooltip of the increase button.</description>
      </property>
      <property name="decreaseButtonTooltip" datatype="String" required="false">
        <description type="text/plain">Gets or sets the tooltip of the decrease button.</description>
      </property>
      <property name="enabled" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the enabled state of the control.</description>
      </property>
      <property name="largeStep" datatype="Number" required="false" isInteger="true">
        <description type="text/plain">Gets or sets the delta with which the value changes when the user presses PageUp or PageDown (the drag handle must be focused).</description>
      </property>
      <property name="smallStep" datatype="Number" required="false" isInteger="true">
        <description type="text/plain">Gets or sets the small step value of the slider. The slider value will change when the end user (1) clicks on the increase/decrease buttons, (2) presses the arrow keys (the drag handle must be focused), or (3) drags the drag handle.</description>
      </property>
      <property name="min" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the minimum value of the slider.</description>
      </property>
      <property name="max" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the maximum value of the slider.</description>
      </property>
      <property name="orientation" datatype="String" required="false">
        <description type="text/plain">Gets or sets the orientation of the slider. Allowed values are "horizontal" or "vertical". Default value is "horizontal".</description>
        <options>
          <option value="horizontal">horizontal</option>
          <option value="vertical">vertical</option>
        </options>
      </property>
      <property name="tickPlacement" datatype="String" required="false">
        <description type="text/plain">Gets or sets the location of the tick marks in the slider. The available options are "minorOutside", "minorMajorOutside", "inside" and "none". Default value is "minorMajorOutside".</description>
        <options>
          <option value="minorMajorOutside">minorMajorOutside</option>
          <option value="minorOutside">minorOutside</option>
          <option value="inside">inside</option>
          <option value="none">none</option>
        </options>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Slider._TooltipConfiguration" required="false">
        <description type="text/plain">Gets the configuration settings for the slider tooltip.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
    <events>
      <event name="change" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the value of the slider is changed.</description>
      </event>
      <event name="slide" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the slide handle has moved.</description>
      </event>
    </events>
  </class>
  <class name="Telerik.UI.RadRangeSlider">
    <ancestor datatype="Telerik.UI.SliderBase" />
    <description type="text/plain">A slider control for selecting a range of values.</description>
    <constructor>
      <description type="text/plain">Creates a new RadRangeSlider control.</description>
      <parameter name="element" p5:domElement="true" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">The HTML element this control is associated with.</description>
      </parameter>
      <parameter name="options" datatype="Object">
        <description type="text/plain">The initialization options for this control.</description>
      </parameter>
      <returnType datatype="Telerik.UI.RadRangeSlider" />
    </constructor>
    <properties>
      <property name="values" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the start and end selection values of the range slider as an array of 2 elements.</description>
      </property>
      <property name="selectionStart" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the starting value of the current range selection.</description>
      </property>
      <property name="selectionEnd" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the end value of the current range selection.</description>
      </property>
      <property name="enabled" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the enabled state of the control.</description>
      </property>
      <property name="largeStep" datatype="Number" required="false" isInteger="true">
        <description type="text/plain">Gets or sets the delta with which the value changes when the user presses PageUp or PageDown (the drag handle must be focused).</description>
      </property>
      <property name="smallStep" datatype="Number" required="false" isInteger="true">
        <description type="text/plain">Gets or sets the small step value of the slider. The slider value will change when the end user (1) clicks on the increase/decrease buttons, (2) presses the arrow keys (the drag handle must be focused), or (3) drags the drag handle.</description>
      </property>
      <property name="min" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the minimum value of the slider.</description>
      </property>
      <property name="max" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the maximum value of the slider.</description>
      </property>
      <property name="orientation" datatype="String" required="false">
        <description type="text/plain">Gets or sets the orientation of the slider. Allowed values are "horizontal" or "vertical". Default value is "horizontal".</description>
        <options>
          <option value="horizontal">horizontal</option>
          <option value="vertical">vertical</option>
        </options>
      </property>
      <property name="tickPlacement" datatype="String" required="false">
        <description type="text/plain">Gets or sets the location of the tick marks in the slider. The available options are "minorOutside", "minorMajorOutside", "inside" and "none". Default value is "minorMajorOutside".</description>
        <options>
          <option value="minorMajorOutside">minorMajorOutside</option>
          <option value="minorOutside">minorOutside</option>
          <option value="inside">inside</option>
          <option value="none">none</option>
        </options>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Slider._TooltipConfiguration" required="false">
        <description type="text/plain">Gets the configuration settings for the slider tooltip.</description>
      </property>
      <property name="element" datatype="HTMLElement" required="false" hidden="true">
        <description type="text/plain">Gets the DOM element that hosts this control.</description>
      </property>
    </properties>
    <events>
      <event name="change" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when the value of the slider is changed.</description>
      </event>
      <event name="slide" p5:bubbles="false" xmlns:p5="http://schemas.microsoft.com/winjs/2011">
        <description type="text/plain">Fires when a slide handle has moved.</description>
      </event>
    </events>
  </class>
  <class name="Telerik.UI.Chart._TitleConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of a chart title.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of a chart title.</description>
      <returnType datatype="Telerik.UI.Chart._TitleConfiguration" />
    </constructor>
    <properties>
      <property name="align" datatype="String" required="false" defaultValue="center">
        <description type="text/plain">Gets or sets the chart title alignment. Accepted values are: "left", "center", "right". Default is "center"</description>
        <options>
          <option value="left">left</option>
          <option value="center">center</option>
          <option value="right">right</option>
        </options>
      </property>
      <property name="background" datatype="String" required="false">
        <description type="text/plain">Gets or sets the background color of the chart title.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings of the chart title.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text color of the chart title.</description>
      </property>
      <property name="font" datatype="String" required="false">
        <description type="text/plain">Gets or sets the title font.</description>
      </property>
      <property name="margin" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the margin settings of the chart title.</description>
      </property>
      <property name="padding" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the padding settings of the chart title.</description>
      </property>
      <property name="position" datatype="String" required="false" defaultValue="top">
        <description type="text/plain">Gets or sets the vertical position of the chart title. Accepted values are: "top" and "bottom". Default is "top".</description>
        <options>
          <option value="top">top</option>
          <option value="bottom">bottom</option>
        </options>
      </property>
      <property name="text" datatype="String" required="false">
        <description type="text/plain">Gets or sets the title text.</description>
      </property>
      <property name="visible" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the title visibility. Default is false.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._LegendLabelConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of chart legend labels.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of chart legend labels.</description>
      <returnType datatype="Telerik.UI.Chart._LegendLabelConfiguration" />
    </constructor>
    <properties>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text color of the label. Any valid CSS color value is accepted.</description>
      </property>
      <property name="font" datatype="String" required="false">
        <description type="text/plain">Gets or sets the label font style.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._LegendConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of a chart legend.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of a chart legend.</description>
      <returnType datatype="Telerik.UI.Chart._LegendConfiguration" />
    </constructor>
    <properties>
      <property name="background" datatype="String" required="false">
        <description type="text/plain">Gets or sets the background color of chart legend. Any valid CSS value is accepted.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings of the chart legend.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._LegendLabelConfiguration" required="false">
        <description type="text/plain">Gets the label settings of the chart legend.</description>
      </property>
      <property name="margin" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the margin settings of the chart legend.</description>
      </property>
      <property name="padding" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the padding settings of the chart legend.</description>
      </property>
      <property name="offsetX" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the X offset of the legend from its positions.</description>
      </property>
      <property name="offsetY" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the Y offset of the legend from its positions.</description>
      </property>
      <property name="position" datatype="String" required="false" defaultValue="right">
        <description type="text/plain">Gets or sets the position of the chart legend. Accepted values are: "top", "bottom", "left", "right", "custom". When a value of "custom" is used, the legend is positioned using its offsetX and offsetY properties. Default value is "right".</description>
        <options>
          <option value="top">top</option>
          <option value="bottom">bottom</option>
          <option value="left">left</option>
          <option value="right">right</option>
          <option value="custom">custom</option>
        </options>
      </property>
      <property name="visible" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the legend visibility. Default is true.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._TooltipConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of a chart tooltip.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of a chart tooltip.</description>
      <returnType datatype="Telerik.UI.Chart._TooltipConfiguration" />
    </constructor>
    <properties>
      <property name="background" datatype="String" required="false">
        <description type="text/plain">Gets or sets the background color of the tooltip. The default value is determined from the series color.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the tooltip border settings.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text color of the tooltip. The default value is determined from the series label color.</description>
      </property>
      <property name="font" datatype="String" required="false">
        <description type="text/plain">Gets or sets the tooltip font.</description>
      </property>
      <property name="format" datatype="String" required="false">
        <description type="text/plain">Gets or sets the tooltip format.</description>
      </property>
      <property name="padding" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the padding settings of the tooltip.</description>
      </property>
      <property name="template" datatype="String" required="false">
        <description type="text/plain">Gets or sets the templated that is used to render the tooltip. Available template variables are value, category, series and dataItem.</description>
      </property>
      <property name="visible" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the tooltip visibility. Default is false.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._PlotAreaConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the chart plot area.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the chart plot area.</description>
      <returnType datatype="Telerik.UI.Chart._PlotAreaConfiguration" />
    </constructor>
    <properties>
      <property name="background" datatype="String" required="false">
        <description type="text/plain">Gets or sets the background color of the plot area.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings of the plot area.</description>
      </property>
      <property name="margin" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the margin settings of the plot area.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._LabelConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of chart labels.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of chart labels.</description>
      <returnType datatype="Telerik.UI.Chart._LabelConfiguration" />
    </constructor>
    <properties>
      <property name="background" datatype="String" required="false">
        <description type="text/plain">Gets or sets the background color of the labels. Any valid CSS color is accepted.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings of the labels.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text color of the labels. Any valid CSS color is accepted.</description>
      </property>
      <property name="font" datatype="String" required="false">
        <description type="text/plain">Gets or sets the font style of the labels.</description>
      </property>
      <property name="format" datatype="String" required="false">
        <description type="text/plain">Gets or sets the format of the labels.</description>
      </property>
      <property name="margin" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the margin settings of the labels.</description>
      </property>
      <property name="padding" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the padding settings of the labels.</description>
      </property>
      <property name="template" datatype="String" required="false">
        <description type="text/plain">Gets or sets the label template. Inside the template, the 'value' variable exposes the label value.</description>
      </property>
      <property name="visible" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the visibility of the labels.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._AxisTitleConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of a chart axis title.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of a chart axis title.</description>
      <returnType datatype="Telerik.UI.Chart._AxisTitleConfiguration" />
    </constructor>
    <properties>
      <property name="rotation" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the rotation angle of the axis title.</description>
      </property>
      <property name="align" datatype="String" required="false" defaultValue="center">
        <description type="text/plain">Gets or sets the chart title alignment. Accepted values are: "left", "center", "right". Default is "center"</description>
        <options>
          <option value="left">left</option>
          <option value="center">center</option>
          <option value="right">right</option>
        </options>
      </property>
      <property name="background" datatype="String" required="false">
        <description type="text/plain">Gets or sets the background color of the chart title.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings of the chart title.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text color of the chart title.</description>
      </property>
      <property name="font" datatype="String" required="false">
        <description type="text/plain">Gets or sets the title font.</description>
      </property>
      <property name="margin" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the margin settings of the chart title.</description>
      </property>
      <property name="padding" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the padding settings of the chart title.</description>
      </property>
      <property name="position" datatype="String" required="false" defaultValue="top">
        <description type="text/plain">Gets or sets the vertical position of the chart title. Accepted values are: "top" and "bottom". Default is "top".</description>
        <options>
          <option value="top">top</option>
          <option value="bottom">bottom</option>
        </options>
      </property>
      <property name="text" datatype="String" required="false">
        <description type="text/plain">Gets or sets the title text.</description>
      </property>
      <property name="visible" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the title visibility. Default is false.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._AxisLabelDateFormatConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the date label format on a chart axis.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the date label format on a chart axis.</description>
      <returnType datatype="Telerik.UI.Chart._AxisLabelDateFormatConfiguration" />
    </constructor>
    <properties>
      <property name="hours" datatype="String" required="false">
        <description type="text/plain">Gets or sets the format for displaying hour values in the axis labels. Default value is "HH:mm".</description>
      </property>
      <property name="days" datatype="String" required="false">
        <description type="text/plain">Gets or sets the format for displaying day values in the axis labels. Default value is "M/d".</description>
      </property>
      <property name="months" datatype="String" required="false">
        <description type="text/plain">Gets or sets the format for displaying month values in the axis labels. Default value is "MMM 'yy".</description>
      </property>
      <property name="years" datatype="String" required="false">
        <description type="text/plain">Gets or sets the format for displaying year values in the axis labels. Default value is "yyyy".</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._AxisLabelConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the chart axis labels.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the chart axis labels.</description>
      <returnType datatype="Telerik.UI.Chart._AxisLabelConfiguration" />
    </constructor>
    <properties>
      <property name="mirror" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets a value indicating whether the labels and ticks are mirrored. Mirrored labels usually rendered on the left side will be rendered on the right.</description>
      </property>
      <property name="rotation" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the rotation angle of the labels.</description>
      </property>
      <property name="skip" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the number of labels from the beginning of the axis to skip rendering.</description>
      </property>
      <property name="step" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the label rendering step. Every n-th label is rendered, where n is the step value.</description>
      </property>
      <property name="dateFormats" datatype="Telerik.UI.Chart._AxisLabelDateFormatConfiguration" required="false">
        <description type="text/plain">Gets the date formatting settings for the axis labels when the axis values are of Date type.</description>
      </property>
      <property name="background" datatype="String" required="false">
        <description type="text/plain">Gets or sets the background color of the labels. Any valid CSS color is accepted.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings of the labels.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text color of the labels. Any valid CSS color is accepted.</description>
      </property>
      <property name="font" datatype="String" required="false">
        <description type="text/plain">Gets or sets the font style of the labels.</description>
      </property>
      <property name="format" datatype="String" required="false">
        <description type="text/plain">Gets or sets the format of the labels.</description>
      </property>
      <property name="margin" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the margin settings of the labels.</description>
      </property>
      <property name="padding" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the padding settings of the labels.</description>
      </property>
      <property name="template" datatype="String" required="false">
        <description type="text/plain">Gets or sets the label template. Inside the template, the 'value' variable exposes the label value.</description>
      </property>
      <property name="visible" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the visibility of the labels.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._AxisLineConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of a chart axis line.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of a chart axis line.</description>
      <returnType datatype="Telerik.UI.Chart._AxisLineConfiguration" />
    </constructor>
    <properties>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color of the axis line. Any valid CSS color is accepted.</description>
      </property>
      <property name="visible" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the visibility of the axis line.</description>
      </property>
      <property name="width" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets the width of the axis line in pixels.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._AxisTickConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of a chart axis tick.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of a chart axis tick.</description>
      <returnType datatype="Telerik.UI.Chart._AxisTickConfiguration" />
    </constructor>
    <properties>
      <property name="size" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the width of the axis tick lines in pixels.</description>
      </property>
      <property name="visible" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the visibility of the axis tick lines.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._AxisConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of a chart axis.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of a chart axis.</description>
      <returnType datatype="Telerik.UI.Chart._AxisConfiguration" />
    </constructor>
    <properties>
      <property name="axisCrossingValue" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the value at which this axis crosses the perpendicular axis.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color to all apply to all axis elements. Individual color settings for line and labels take priority. Any valid CSS color is accepted.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._AxisLabelConfiguration" required="false">
        <description type="text/plain">Gets the axis label settings.</description>
      </property>
      <property name="line" datatype="Telerik.UI.Chart._AxisLineConfiguration" required="false">
        <description type="text/plain">Gets the axis line settings.</description>
      </property>
      <property name="majorGridLines" datatype="Telerik.UI.Chart._AxisLineConfiguration" required="false">
        <description type="text/plain">Gets the major grid line settings.</description>
      </property>
      <property name="minorGridLines" datatype="Telerik.UI.Chart._AxisLineConfiguration" required="false">
        <description type="text/plain">Gets the minor grid line settings.</description>
      </property>
      <property name="majorTicks" datatype="Telerik.UI.Chart._AxisTickConfiguration" required="false">
        <description type="text/plain">Gets the major tick settings</description>
      </property>
      <property name="minorTicks" datatype="Telerik.UI.Chart._AxisTickConfiguration" required="false">
        <description type="text/plain">Gets the minor tick settings</description>
      </property>
      <property name="min" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the minimum value of the axis. This property is often used in combination with the max property to adjust the size of the chart relative to the charting area.</description>
      </property>
      <property name="max" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the maximum value of the axis. This property is often used in combination with the min property to adjust the size of the chart relative to the charting area.</description>
      </property>
      <property name="majorUnit" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the interval between major divisions. For example, on a column chart, this property determines the step size whole going up the vertical axis. You can additionally have minor steps and ticks in between the major ones by adjusting the minorUnit and minorTick.size properties.</description>
      </property>
      <property name="minorUnit" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the interval between minor divisions. For more information, refer to the majorUnit property description.</description>
      </property>
      <property name="name" datatype="String" required="false">
        <description type="text/plain">Gets or sets the unique axis name.</description>
      </property>
      <property name="plotBands" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the plot bands of the axis. Elements of this array must be objects of the form { from:0, to: 100, color: 'navy' }</description>
      </property>
      <property name="reverse" datatype="Boolean" required="false" defaultValue="false">
        <description type="text/plain">Gets or sets a value indicating whether the axis direction is reversed.</description>
      </property>
      <property name="title" datatype="Telerik.UI.Chart._AxisTitleConfiguration" required="false">
        <description type="text/plain">Retrieves the chart axis title settings.</description>
      </property>
      <property name="visible" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets the visibility of this axis.</description>
      </property>
      <property name="baseUnit" datatype="String" required="false">
        <description type="text/plain">Gets or sets the base time interval for the axis when axis values are of Date type. Accepted values are "minutes", "hours", "days", "months" and "years". The default value is determined automatically from the minimum difference between subsequent categories.</description>
        <options>
          <option value="minutes">minutes</option>
          <option value="hours">hours</option>
          <option value="days">days</option>
          <option value="months">months</option>
          <option value="years">years</option>
        </options>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._CategoryAxisConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the chart category axis.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the chart category axis.</description>
      <returnType datatype="Telerik.UI.Chart._CategoryAxisConfiguration" />
    </constructor>
    <properties>
      <property name="categories" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of category names that will be used to label the categories in the chart.</description>
      </property>
      <property name="field" datatype="String" required="false">
        <description type="text/plain">Gets or sets the field from the objects in the categories array that will be used to retrieve the category name. Use this property when the categories array contains objects instead of primitive types.</description>
      </property>
      <property name="axisCrossingValue" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the value at which this axis crosses the perpendicular axis.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color to all apply to all axis elements. Individual color settings for line and labels take priority. Any valid CSS color is accepted.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._AxisLabelConfiguration" required="false">
        <description type="text/plain">Gets the axis label settings.</description>
      </property>
      <property name="line" datatype="Telerik.UI.Chart._AxisLineConfiguration" required="false">
        <description type="text/plain">Gets the axis line settings.</description>
      </property>
      <property name="majorGridLines" datatype="Telerik.UI.Chart._AxisLineConfiguration" required="false">
        <description type="text/plain">Gets the major grid line settings.</description>
      </property>
      <property name="minorGridLines" datatype="Telerik.UI.Chart._AxisLineConfiguration" required="false">
        <description type="text/plain">Gets the minor grid line settings.</description>
      </property>
      <property name="majorTicks" datatype="Telerik.UI.Chart._AxisTickConfiguration" required="false">
        <description type="text/plain">Gets the major tick settings</description>
      </property>
      <property name="minorTicks" datatype="Telerik.UI.Chart._AxisTickConfiguration" required="false">
        <description type="text/plain">Gets the minor tick settings</description>
      </property>
      <property name="min" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the minimum value of the axis. This property is often used in combination with the max property to adjust the size of the chart relative to the charting area.</description>
      </property>
      <property name="max" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the maximum value of the axis. This property is often used in combination with the min property to adjust the size of the chart relative to the charting area.</description>
      </property>
      <property name="majorUnit" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the interval between major divisions. For example, on a column chart, this property determines the step size whole going up the vertical axis. You can additionally have minor steps and ticks in between the major ones by adjusting the minorUnit and minorTick.size properties.</description>
      </property>
      <property name="minorUnit" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the interval between minor divisions. For more information, refer to the majorUnit property description.</description>
      </property>
      <property name="name" datatype="String" required="false">
        <description type="text/plain">Gets or sets the unique axis name.</description>
      </property>
      <property name="plotBands" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the plot bands of the axis. Elements of this array must be objects of the form { from:0, to: 100, color: 'navy' }</description>
      </property>
      <property name="reverse" datatype="Boolean" required="false" defaultValue="false">
        <description type="text/plain">Gets or sets a value indicating whether the axis direction is reversed.</description>
      </property>
      <property name="title" datatype="Telerik.UI.Chart._AxisTitleConfiguration" required="false">
        <description type="text/plain">Retrieves the chart axis title settings.</description>
      </property>
      <property name="visible" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets the visibility of this axis.</description>
      </property>
      <property name="baseUnit" datatype="String" required="false">
        <description type="text/plain">Gets or sets the base time interval for the axis when axis values are of Date type. Accepted values are "minutes", "hours", "days", "months" and "years". The default value is determined automatically from the minimum difference between subsequent categories.</description>
        <options>
          <option value="minutes">minutes</option>
          <option value="hours">hours</option>
          <option value="days">days</option>
          <option value="months">months</option>
          <option value="years">years</option>
        </options>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart.Series">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">Base class for all chart series.</description>
    <constructor>
      <description type="text/plain">Base class for all chart series.</description>
      <returnType datatype="Telerik.UI.Chart.Series" />
    </constructor>
    <properties>
      <property name="type" datatype="String" required="false" hidden="true">
        <description type="text/plain">Gets the type of this series.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color with which this series is displayed on the plot area.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for this series.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._LabelConfiguration" required="false">
        <description type="text/plain">Gets or sets the settings for the series data labels.</description>
      </property>
      <property name="stack" datatype="Boolean" required="false">
        <description type="text/plain">Indicates whether the series should be stacked.</description>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Chart._TooltipConfiguration" required="false">
        <description type="text/plain">Retrieves the tooltip settings for this series.</description>
      </property>
      <property name="data" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of data points for this series.</description>
      </property>
      <property name="field" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the series value.</description>
      </property>
      <property name="groupNameTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name template for auto-generated series when binding to grouped data. Template variables: series, group, group.field, group.value.</description>
      </property>
      <property name="name" datatype="String" required="false">
        <description type="text/plain">Gets or sets the series name visible in the legend.</description>
      </property>
      <property name="visibleInLegend" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Indicates whether to show the series in the legend.</description>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets series opacity.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._SeriesMarkersConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the markers of a chart series.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the markers of a chart series.</description>
      <returnType datatype="Telerik.UI.Chart._SeriesMarkersConfiguration" />
    </constructor>
    <properties>
      <property name="background" datatype="String" required="false">
        <description type="text/plain">Gets or sets the background color of the markers.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for the markers.</description>
      </property>
      <property name="size" datatype="Number" required="false" defaultValue="6">
        <description type="text/plain">Gets or sets the size of the markers.</description>
      </property>
      <property name="type" datatype="String" required="false" defaultValue="circle">
        <description type="text/plain">Gets or sets the shape type of the markers. Accepted values are: "circle", "square" and "triangle". Default is "circle".</description>
        <options>
          <option value="circle">circle</option>
          <option value="square">square</option>
          <option value="triangle">triangle</option>
        </options>
      </property>
      <property name="visible" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets the visibility of the markers.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._SeriesNegativeValuesConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the negative values for a chart series.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the negative values for a chart series.</description>
      <returnType datatype="Telerik.UI.Chart._SeriesNegativeValuesConfiguration" />
    </constructor>
    <properties>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color of the negative values.</description>
      </property>
      <property name="visible" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the visibility of the negative values.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._AreaSeriesLineConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the lines of an area series in a chart.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the lines of an area series in a chart.</description>
      <returnType datatype="Telerik.UI.Chart._AreaSeriesLineConfiguration" />
    </constructor>
    <properties>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color of the area series line.</description>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets the opacity of the area series line.</description>
      </property>
      <property name="width" datatype="Number" required="false" defaultValue="4">
        <description type="text/plain">Gets or sets the line width of the area series.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart.AreaSeries">
    <ancestor datatype="Telerik.UI.Chart.Series" />
    <description type="text/plain">Creates an instance of an area series for RadChart</description>
    <constructor>
      <description type="text/plain">Creates an instance of an area series for RadChart</description>
      <returnType datatype="Telerik.UI.Chart.AreaSeries" />
    </constructor>
    <properties>
      <property name="type" datatype="String" required="false" readonly="true">
        <description type="text/plain">Gets the type of the series.</description>
      </property>
      <property name="line" datatype="Telerik.UI.Chart._AreaSeriesLineConfiguration" required="false">
        <description type="text/plain">Gets the line settings for the area series.</description>
      </property>
      <property name="markers" datatype="Telerik.UI.Chart._SeriesMarkersConfiguration" required="false">
        <description type="text/plain">Gets the marker settings for the area series.</description>
      </property>
      <property name="missingValues" datatype="String" required="false" defaultValue="gap">
        <description type="text/plain">Gets or sets the behavior for handling missing values in area series. Accepted values are: "gap" - the line stops before missing point and continues after it; "interpolate" - the value is interpolated from neighboring points; "zero" - the value is assumed to be zero. Default is "gap".</description>
        <options>
          <option value="gap">gap</option>
          <option value="interpolate">interpolate</option>
          <option value="zero">zero</option>
        </options>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="0.4">
        <description type="text/plain">Gets or sets the opacity of the area series.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color with which this series is displayed on the plot area.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for this series.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._LabelConfiguration" required="false">
        <description type="text/plain">Gets or sets the settings for the series data labels.</description>
      </property>
      <property name="stack" datatype="Boolean" required="false">
        <description type="text/plain">Indicates whether the series should be stacked.</description>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Chart._TooltipConfiguration" required="false">
        <description type="text/plain">Retrieves the tooltip settings for this series.</description>
      </property>
      <property name="data" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of data points for this series.</description>
      </property>
      <property name="field" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the series value.</description>
      </property>
      <property name="groupNameTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name template for auto-generated series when binding to grouped data. Template variables: series, group, group.field, group.value.</description>
      </property>
      <property name="name" datatype="String" required="false">
        <description type="text/plain">Gets or sets the series name visible in the legend.</description>
      </property>
      <property name="visibleInLegend" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Indicates whether to show the series in the legend.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart.BarSeries">
    <ancestor datatype="Telerik.UI.Chart.Series" />
    <description type="text/plain">Creates an instance of a bar series for RadChart</description>
    <constructor>
      <description type="text/plain">Creates an instance of a bar series for RadChart</description>
      <returnType datatype="Telerik.UI.Chart.BarSeries" />
    </constructor>
    <properties>
      <property name="type" datatype="String" required="false" readonly="true">
        <description type="text/plain">Gets the type of the series.</description>
      </property>
      <property name="axis" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name of the value axis to use. Defaults to the primary axis.</description>
      </property>
      <property name="gap" datatype="Number" required="false" defaultValue="1.5">
        <description type="text/plain">Gets or sets the distance between category clusters.</description>
      </property>
      <property name="spacing" datatype="Number" required="false" defaultValue="0.4">
        <description type="text/plain">Gets or sets the space between bars.</description>
      </property>
      <property name="overlayGradient" datatype="String" required="false" defaultValue="none">
        <description type="text/plain">Gets or sets the overlay gradient used for this series. Allowed values are "none", "glass", "roundedBevel". Default value is "none".</description>
        <options>
          <option value="none">none</option>
          <option value="glass">glass</option>
          <option value="roundedBevel">roundedBevel</option>
        </options>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color with which this series is displayed on the plot area.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for this series.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._LabelConfiguration" required="false">
        <description type="text/plain">Gets or sets the settings for the series data labels.</description>
      </property>
      <property name="stack" datatype="Boolean" required="false">
        <description type="text/plain">Indicates whether the series should be stacked.</description>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Chart._TooltipConfiguration" required="false">
        <description type="text/plain">Retrieves the tooltip settings for this series.</description>
      </property>
      <property name="data" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of data points for this series.</description>
      </property>
      <property name="field" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the series value.</description>
      </property>
      <property name="groupNameTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name template for auto-generated series when binding to grouped data. Template variables: series, group, group.field, group.value.</description>
      </property>
      <property name="name" datatype="String" required="false">
        <description type="text/plain">Gets or sets the series name visible in the legend.</description>
      </property>
      <property name="visibleInLegend" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Indicates whether to show the series in the legend.</description>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets series opacity.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart.ColumnSeries">
    <ancestor datatype="Telerik.UI.Chart.BarSeries" />
    <description type="text/plain">Creates an instance of a column series for RadChart</description>
    <constructor>
      <description type="text/plain">Creates an instance of a column series for RadChart</description>
      <returnType datatype="Telerik.UI.Chart.ColumnSeries" />
    </constructor>
    <properties>
      <property name="type" datatype="String" required="false" readonly="true">
        <description type="text/plain">Gets the type of the series.</description>
      </property>
      <property name="axis" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name of the value axis to use. Defaults to the primary axis.</description>
      </property>
      <property name="gap" datatype="Number" required="false" defaultValue="1.5">
        <description type="text/plain">Gets or sets the distance between category clusters.</description>
      </property>
      <property name="spacing" datatype="Number" required="false" defaultValue="0.4">
        <description type="text/plain">Gets or sets the space between bars.</description>
      </property>
      <property name="overlayGradient" datatype="String" required="false" defaultValue="none">
        <description type="text/plain">Gets or sets the overlay gradient used for this series. Allowed values are "none", "glass", "roundedBevel". Default value is "none".</description>
        <options>
          <option value="none">none</option>
          <option value="glass">glass</option>
          <option value="roundedBevel">roundedBevel</option>
        </options>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color with which this series is displayed on the plot area.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for this series.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._LabelConfiguration" required="false">
        <description type="text/plain">Gets or sets the settings for the series data labels.</description>
      </property>
      <property name="stack" datatype="Boolean" required="false">
        <description type="text/plain">Indicates whether the series should be stacked.</description>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Chart._TooltipConfiguration" required="false">
        <description type="text/plain">Retrieves the tooltip settings for this series.</description>
      </property>
      <property name="data" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of data points for this series.</description>
      </property>
      <property name="field" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the series value.</description>
      </property>
      <property name="groupNameTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name template for auto-generated series when binding to grouped data. Template variables: series, group, group.field, group.value.</description>
      </property>
      <property name="name" datatype="String" required="false">
        <description type="text/plain">Gets or sets the series name visible in the legend.</description>
      </property>
      <property name="visibleInLegend" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Indicates whether to show the series in the legend.</description>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets series opacity.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart.LineSeries">
    <ancestor datatype="Telerik.UI.Chart.Series" />
    <description type="text/plain">Creates an instance of a line series for RadChart</description>
    <constructor>
      <description type="text/plain">Creates an instance of a line series for RadChart</description>
      <returnType datatype="Telerik.UI.Chart.LineSeries" />
    </constructor>
    <properties>
      <property name="type" datatype="String" required="false" readonly="true">
        <description type="text/plain">Gets the type of the series.</description>
      </property>
      <property name="axis" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name of the value axis to use. Defaults to the primary axis.</description>
      </property>
      <property name="dashType" datatype="String" required="false">
        <description type="text/plain">Gets or sets the dash type of the line.</description>
        <options>
          <option value="solid">solid</option>
          <option value="dot">dot</option>
          <option value="dash">dash</option>
          <option value="longDash">longDash</option>
          <option value="dashDot">dashDot</option>
          <option value="longDashDot">longDashDot</option>
          <option value="longDashDotDot">longDashDotDot</option>
        </options>
      </property>
      <property name="markers" datatype="Telerik.UI.Chart._SeriesMarkersConfiguration" required="false">
        <description type="text/plain">Gets the marker settings for the line series.</description>
      </property>
      <property name="missingValues" datatype="String" required="false" defaultValue="gap">
        <description type="text/plain">Gets or sets the behavior for handling missing values in line series. Accepted values are: "gap" - the line stops before missing point and continues after it; "interpolate" - the value is interpolated from neighboring points; "zero" - the value is assumed to be zero. Default is "gap".</description>
        <options>
          <option value="gap">gap</option>
          <option value="interpolate">interpolate</option>
          <option value="zero">zero</option>
        </options>
      </property>
      <property name="width" datatype="Number" required="false" defaultValue="4">
        <description type="text/plain">Gets or sets the line width for this series.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color with which this series is displayed on the plot area.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for this series.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._LabelConfiguration" required="false">
        <description type="text/plain">Gets or sets the settings for the series data labels.</description>
      </property>
      <property name="stack" datatype="Boolean" required="false">
        <description type="text/plain">Indicates whether the series should be stacked.</description>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Chart._TooltipConfiguration" required="false">
        <description type="text/plain">Retrieves the tooltip settings for this series.</description>
      </property>
      <property name="data" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of data points for this series.</description>
      </property>
      <property name="field" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the series value.</description>
      </property>
      <property name="groupNameTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name template for auto-generated series when binding to grouped data. Template variables: series, group, group.field, group.value.</description>
      </property>
      <property name="name" datatype="String" required="false">
        <description type="text/plain">Gets or sets the series name visible in the legend.</description>
      </property>
      <property name="visibleInLegend" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Indicates whether to show the series in the legend.</description>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets series opacity.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._PieLabelConnectorConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the pie series label connectors in a chart.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the pie series label connectors in a chart.</description>
      <returnType datatype="Telerik.UI.Chart._PieLabelConnectorConfiguration" />
    </constructor>
    <properties>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets teh color of the connector line.</description>
      </property>
      <property name="padding" datatype="Number" required="false" defaultValue="4">
        <description type="text/plain">Gets or sets the padding between the connector line and the label, and connector line and the pie chart.</description>
      </property>
      <property name="width" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets the width of the connector line.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart._PieLabelConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the pie series labels in a chart.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the pie series labels in a chart.</description>
      <returnType datatype="Telerik.UI.Chart._PieLabelConfiguration" />
    </constructor>
    <properties>
      <property name="align" datatype="String" required="false" defaultValue="circle">
        <description type="text/plain">Defines the alignment of the pie labels. Accepted values are "circle" - the labels are positioned in a circle around the pie chart; "column" - the labels are positioned in columns to the left and right of the pie chart.</description>
        <options>
          <option value="circle">circle</option>
          <option value="column">column</option>
        </options>
      </property>
      <property name="distance" datatype="Number" required="false" defaultValue="35">
        <description type="text/plain">Gets or sets the distance of the labels from the pie arcs.</description>
      </property>
      <property name="position" datatype="String" required="false" defaultValue="outsideEnd">
        <description type="text/plain">Defines the position of the pie labels. Accepted values are: "outsideEnd" - labels are positioned outside, near the end of the pie segments; "insideEnd" - labels are positioned inside, near the end of the pie segments; "center" - labels are positioned at the center of the pie segments. Default value is "outsideEnd".</description>
        <options>
          <option value="outsideEnd">outsideEnd</option>
          <option value="insideEnd">insideEnd</option>
          <option value="center">center</option>
        </options>
      </property>
      <property name="background" datatype="String" required="false">
        <description type="text/plain">Gets or sets the background color of the labels. Any valid CSS color is accepted.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings of the labels.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text color of the labels. Any valid CSS color is accepted.</description>
      </property>
      <property name="font" datatype="String" required="false">
        <description type="text/plain">Gets or sets the font style of the labels.</description>
      </property>
      <property name="format" datatype="String" required="false">
        <description type="text/plain">Gets or sets the format of the labels.</description>
      </property>
      <property name="margin" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the margin settings of the labels.</description>
      </property>
      <property name="padding" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the padding settings of the labels.</description>
      </property>
      <property name="template" datatype="String" required="false">
        <description type="text/plain">Gets or sets the label template. Inside the template, the 'value' variable exposes the label value.</description>
      </property>
      <property name="visible" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the visibility of the labels.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart.PieSeries">
    <ancestor datatype="Telerik.UI.Chart.Series" />
    <description type="text/plain">Creates an instance of a pie series for RadChart</description>
    <constructor>
      <description type="text/plain">Creates an instance of a pie series for RadChart</description>
      <returnType datatype="Telerik.UI.Chart.PieSeries" />
    </constructor>
    <properties>
      <property name="type" datatype="String" required="false" readonly="true">
        <description type="text/plain">Gets the type of the series.</description>
      </property>
      <property name="categoryField" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the sector category name.</description>
      </property>
      <property name="colorField" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the sector color.</description>
      </property>
      <property name="explodeField" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the boolean value that indicates if the sector is exploded.</description>
      </property>
      <property name="connectors" datatype="Telerik.UI.Chart._PieLabelConnectorConfiguration" required="false">
        <description type="text/plain">Gets the settings for the label connector lines.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._PieLabelConfiguration" required="false">
        <description type="text/plain">Gets or sets the settings for the series data labels.</description>
      </property>
      <property name="padding" datatype="Number" required="false" defaultValue="0">
        <description type="text/plain">Gets the padding value around the pie chart (equal on all sides).</description>
      </property>
      <property name="startAngle" datatype="Number" required="false" defaultValue="90">
        <description type="text/plain">Gets or sets the start angle of the first pie segment. Default is 90 degrees.</description>
      </property>
      <property name="overlayGradient" datatype="String" required="false" defaultValue="roundedBevel">
        <description type="text/plain">Gets or sets the overlay gradient used for this series. Accepted values are "roundedBevel", "glass" and "none".</description>
        <options>
          <option value="none">none</option>
          <option value="glass">glass</option>
          <option value="roundedBevel">roundedBevel</option>
        </options>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color with which this series is displayed on the plot area.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for this series.</description>
      </property>
      <property name="stack" datatype="Boolean" required="false">
        <description type="text/plain">Indicates whether the series should be stacked.</description>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Chart._TooltipConfiguration" required="false">
        <description type="text/plain">Retrieves the tooltip settings for this series.</description>
      </property>
      <property name="data" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of data points for this series.</description>
      </property>
      <property name="field" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the series value.</description>
      </property>
      <property name="groupNameTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name template for auto-generated series when binding to grouped data. Template variables: series, group, group.field, group.value.</description>
      </property>
      <property name="name" datatype="String" required="false">
        <description type="text/plain">Gets or sets the series name visible in the legend.</description>
      </property>
      <property name="visibleInLegend" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Indicates whether to show the series in the legend.</description>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets series opacity.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart.DonutSeries">
    <ancestor datatype="Telerik.UI.Chart.PieSeries" />
    <description type="text/plain">Creates an instance of a donut series for RadChart</description>
    <constructor>
      <description type="text/plain">Creates an instance of a donut series for RadChart</description>
      <returnType datatype="Telerik.UI.Chart.DonutSeries" />
    </constructor>
    <properties>
      <property name="type" datatype="String" required="false" readonly="true">
        <description type="text/plain">Gets the type of the series.</description>
      </property>
      <property name="categoryField" datatype="String" required="false">
        <description type="text/plain">The data field containing the sector category name.</description>
      </property>
      <property name="colorField" datatype="String" required="false">
        <description type="text/plain">The data field containing the sector  color.</description>
      </property>
      <property name="holeSize" datatype="Number" required="false">
        <description type="text/plain">The the radius of the donut hole. If the value is not set, it will be automatically calculated based on the chart size.</description>
      </property>
      <property name="margin" datatype="Number" required="false">
        <description type="text/plain">The margin around each series (not available for the last level of the series).</description>
      </property>
      <property name="size" datatype="Number" required="false">
        <description type="text/plain">The width of the donut ring. If the value is not set, it will be automatically calculated based on the chart size.</description>
      </property>
      <property name="explodeField" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the boolean value that indicates if the sector is exploded.</description>
      </property>
      <property name="connectors" datatype="Telerik.UI.Chart._PieLabelConnectorConfiguration" required="false">
        <description type="text/plain">Gets the settings for the label connector lines.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._PieLabelConfiguration" required="false">
        <description type="text/plain">Gets or sets the settings for the series data labels.</description>
      </property>
      <property name="padding" datatype="Number" required="false" defaultValue="0">
        <description type="text/plain">Gets the padding value around the pie chart (equal on all sides).</description>
      </property>
      <property name="startAngle" datatype="Number" required="false" defaultValue="90">
        <description type="text/plain">Gets or sets the start angle of the first pie segment. Default is 90 degrees.</description>
      </property>
      <property name="overlayGradient" datatype="String" required="false" defaultValue="roundedBevel">
        <description type="text/plain">Gets or sets the overlay gradient used for this series. Accepted values are "roundedBevel", "glass" and "none".</description>
        <options>
          <option value="none">none</option>
          <option value="glass">glass</option>
          <option value="roundedBevel">roundedBevel</option>
        </options>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color with which this series is displayed on the plot area.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for this series.</description>
      </property>
      <property name="stack" datatype="Boolean" required="false">
        <description type="text/plain">Indicates whether the series should be stacked.</description>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Chart._TooltipConfiguration" required="false">
        <description type="text/plain">Retrieves the tooltip settings for this series.</description>
      </property>
      <property name="data" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of data points for this series.</description>
      </property>
      <property name="field" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the series value.</description>
      </property>
      <property name="groupNameTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name template for auto-generated series when binding to grouped data. Template variables: series, group, group.field, group.value.</description>
      </property>
      <property name="name" datatype="String" required="false">
        <description type="text/plain">Gets or sets the series name visible in the legend.</description>
      </property>
      <property name="visibleInLegend" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Indicates whether to show the series in the legend.</description>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets series opacity.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart.ScatterSeries">
    <ancestor datatype="Telerik.UI.Chart.Series" />
    <description type="text/plain">Creates an instance of a scatter series for RadChart</description>
    <constructor>
      <description type="text/plain">Creates an instance of a scatter series for RadChart</description>
      <returnType datatype="Telerik.UI.Chart.ScatterSeries" />
    </constructor>
    <properties>
      <property name="type" datatype="String" required="false" readonly="true">
        <description type="text/plain">Gets the type of the series.</description>
      </property>
      <property name="markers" datatype="Telerik.UI.Chart._SeriesMarkersConfiguration" required="false">
        <description type="text/plain">Gets the marker settings for the scatter series.</description>
      </property>
      <property name="xField" datatype="String" required="false">
        <description type="text/plain">The data field containing the scatter x value.</description>
      </property>
      <property name="yField" datatype="String" required="false">
        <description type="text/plain">The data field containing the scatter y value.</description>
      </property>
      <property name="xAxis" datatype="String" required="false">
        <description type="text/plain">Gets or sets name of the X axis to use. If not specified, defaults to the primary axis.</description>
      </property>
      <property name="yAxis" datatype="String" required="false">
        <description type="text/plain">Gets or sets name of the Y axis to use. If not specified, defaults to the primary axis.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color with which this series is displayed on the plot area.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for this series.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._LabelConfiguration" required="false">
        <description type="text/plain">Gets or sets the settings for the series data labels.</description>
      </property>
      <property name="stack" datatype="Boolean" required="false">
        <description type="text/plain">Indicates whether the series should be stacked.</description>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Chart._TooltipConfiguration" required="false">
        <description type="text/plain">Retrieves the tooltip settings for this series.</description>
      </property>
      <property name="data" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of data points for this series.</description>
      </property>
      <property name="field" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the series value.</description>
      </property>
      <property name="groupNameTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name template for auto-generated series when binding to grouped data. Template variables: series, group, group.field, group.value.</description>
      </property>
      <property name="name" datatype="String" required="false">
        <description type="text/plain">Gets or sets the series name visible in the legend.</description>
      </property>
      <property name="visibleInLegend" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Indicates whether to show the series in the legend.</description>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets series opacity.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart.BubbleSeries">
    <ancestor datatype="Telerik.UI.Chart.ScatterSeries" />
    <description type="text/plain">Creates an instance of a bubble series for RadChart</description>
    <constructor>
      <description type="text/plain">Creates an instance of a bubble series for RadChart</description>
      <returnType datatype="Telerik.UI.Chart.BubbleSeries" />
    </constructor>
    <properties>
      <property name="type" datatype="String" required="false" readonly="true">
        <description type="text/plain">Gets the type of the series.</description>
      </property>
      <property name="categoryField" datatype="String" required="false">
        <description type="text/plain">The data field containing the bubble category name.</description>
      </property>
      <property name="colorField" datatype="String" required="false">
        <description type="text/plain">The data field containing the bubble color.</description>
      </property>
      <property name="maxSize" datatype="Number" required="false">
        <description type="text/plain">The max size of the bubble.</description>
      </property>
      <property name="minSize" datatype="Number" required="false">
        <description type="text/plain">The min size of the bubble.</description>
      </property>
      <property name="negativeValues" datatype="Telerik.UI.Chart._SeriesNegativeValuesConfiguration" required="false">
        <description type="text/plain">The settings for negative values.</description>
      </property>
      <property name="sizeField" datatype="String" required="false">
        <description type="text/plain">The data field containing the bubble size value.</description>
      </property>
      <property name="xField" datatype="String" required="false">
        <description type="text/plain">The data field containing the bubble x value.</description>
      </property>
      <property name="yField" datatype="String" required="false">
        <description type="text/plain">The data field containing the bubble y value.</description>
      </property>
      <property name="markers" datatype="Telerik.UI.Chart._SeriesMarkersConfiguration" required="false">
        <description type="text/plain">Gets the marker settings for the scatter series.</description>
      </property>
      <property name="xAxis" datatype="String" required="false">
        <description type="text/plain">Gets or sets name of the X axis to use. If not specified, defaults to the primary axis.</description>
      </property>
      <property name="yAxis" datatype="String" required="false">
        <description type="text/plain">Gets or sets name of the Y axis to use. If not specified, defaults to the primary axis.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color with which this series is displayed on the plot area.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for this series.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._LabelConfiguration" required="false">
        <description type="text/plain">Gets or sets the settings for the series data labels.</description>
      </property>
      <property name="stack" datatype="Boolean" required="false">
        <description type="text/plain">Indicates whether the series should be stacked.</description>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Chart._TooltipConfiguration" required="false">
        <description type="text/plain">Retrieves the tooltip settings for this series.</description>
      </property>
      <property name="data" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of data points for this series.</description>
      </property>
      <property name="field" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the series value.</description>
      </property>
      <property name="groupNameTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name template for auto-generated series when binding to grouped data. Template variables: series, group, group.field, group.value.</description>
      </property>
      <property name="name" datatype="String" required="false">
        <description type="text/plain">Gets or sets the series name visible in the legend.</description>
      </property>
      <property name="visibleInLegend" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Indicates whether to show the series in the legend.</description>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets series opacity.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart.ScatterLineSeries">
    <ancestor datatype="Telerik.UI.Chart.ScatterSeries" />
    <description type="text/plain">Creates an instance of a scatter line series for RadChart</description>
    <constructor>
      <description type="text/plain">Creates an instance of a scatter line series for RadChart</description>
      <returnType datatype="Telerik.UI.Chart.ScatterLineSeries" />
    </constructor>
    <properties>
      <property name="type" datatype="String" required="false" readonly="true">
        <description type="text/plain">Gets the type of the series.</description>
      </property>
      <property name="dashType" datatype="String" required="false">
        <description type="text/plain">Gets or sets the dash type of the line.</description>
        <options>
          <option value="solid">solid</option>
          <option value="dot">dot</option>
          <option value="dash">dash</option>
          <option value="longDash">longDash</option>
          <option value="dashDot">dashDot</option>
          <option value="longDashDot">longDashDot</option>
          <option value="longDashDotDot">longDashDotDot</option>
        </options>
      </property>
      <property name="missingValues" datatype="String" required="false" defaultValue="gap">
        <description type="text/plain">Gets or sets the behavior for handling missing values in scatter line series. Accepted values are: "gap" - the line stops before missing point and continues after it; "interpolate" - the value is interpolated from neighboring points; "zero" - the value is assumed to be zero. Default is "gap".</description>
        <options>
          <option value="gap">gap</option>
          <option value="interpolate">interpolate</option>
          <option value="zero">zero</option>
        </options>
      </property>
      <property name="width" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets the line width for this series.</description>
      </property>
      <property name="markers" datatype="Telerik.UI.Chart._SeriesMarkersConfiguration" required="false">
        <description type="text/plain">Gets the marker settings for the scatter series.</description>
      </property>
      <property name="xField" datatype="String" required="false">
        <description type="text/plain">The data field containing the scatter x value.</description>
      </property>
      <property name="yField" datatype="String" required="false">
        <description type="text/plain">The data field containing the scatter y value.</description>
      </property>
      <property name="xAxis" datatype="String" required="false">
        <description type="text/plain">Gets or sets name of the X axis to use. If not specified, defaults to the primary axis.</description>
      </property>
      <property name="yAxis" datatype="String" required="false">
        <description type="text/plain">Gets or sets name of the Y axis to use. If not specified, defaults to the primary axis.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color with which this series is displayed on the plot area.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for this series.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._LabelConfiguration" required="false">
        <description type="text/plain">Gets or sets the settings for the series data labels.</description>
      </property>
      <property name="stack" datatype="Boolean" required="false">
        <description type="text/plain">Indicates whether the series should be stacked.</description>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Chart._TooltipConfiguration" required="false">
        <description type="text/plain">Retrieves the tooltip settings for this series.</description>
      </property>
      <property name="data" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of data points for this series.</description>
      </property>
      <property name="field" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the series value.</description>
      </property>
      <property name="groupNameTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name template for auto-generated series when binding to grouped data. Template variables: series, group, group.field, group.value.</description>
      </property>
      <property name="name" datatype="String" required="false">
        <description type="text/plain">Gets or sets the series name visible in the legend.</description>
      </property>
      <property name="visibleInLegend" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Indicates whether to show the series in the legend.</description>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets series opacity.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart.VerticalAreaSeries">
    <ancestor datatype="Telerik.UI.Chart.AreaSeries" />
    <description type="text/plain">Creates an instance of a vertical area series for RadChart</description>
    <constructor>
      <description type="text/plain">Creates an instance of a vertical area series for RadChart</description>
      <returnType datatype="Telerik.UI.Chart.VerticalAreaSeries" />
    </constructor>
    <properties>
      <property name="type" datatype="String" required="false" readonly="true">
        <description type="text/plain">Gets the type of the series.</description>
      </property>
      <property name="line" datatype="Telerik.UI.Chart._AreaSeriesLineConfiguration" required="false">
        <description type="text/plain">Gets the line settings for the area series.</description>
      </property>
      <property name="markers" datatype="Telerik.UI.Chart._SeriesMarkersConfiguration" required="false">
        <description type="text/plain">Gets the marker settings for the area series.</description>
      </property>
      <property name="missingValues" datatype="String" required="false" defaultValue="gap">
        <description type="text/plain">Gets or sets the behavior for handling missing values in area series. Accepted values are: "gap" - the line stops before missing point and continues after it; "interpolate" - the value is interpolated from neighboring points; "zero" - the value is assumed to be zero. Default is "gap".</description>
        <options>
          <option value="gap">gap</option>
          <option value="interpolate">interpolate</option>
          <option value="zero">zero</option>
        </options>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="0.4">
        <description type="text/plain">Gets or sets the opacity of the area series.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color with which this series is displayed on the plot area.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for this series.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._LabelConfiguration" required="false">
        <description type="text/plain">Gets or sets the settings for the series data labels.</description>
      </property>
      <property name="stack" datatype="Boolean" required="false">
        <description type="text/plain">Indicates whether the series should be stacked.</description>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Chart._TooltipConfiguration" required="false">
        <description type="text/plain">Retrieves the tooltip settings for this series.</description>
      </property>
      <property name="data" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of data points for this series.</description>
      </property>
      <property name="field" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the series value.</description>
      </property>
      <property name="groupNameTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name template for auto-generated series when binding to grouped data. Template variables: series, group, group.field, group.value.</description>
      </property>
      <property name="name" datatype="String" required="false">
        <description type="text/plain">Gets or sets the series name visible in the legend.</description>
      </property>
      <property name="visibleInLegend" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Indicates whether to show the series in the legend.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Chart.VerticalLineSeries">
    <ancestor datatype="Telerik.UI.Chart.LineSeries" />
    <description type="text/plain">Creates an instance of a vertical line series for RadChart</description>
    <constructor>
      <description type="text/plain">Creates an instance of a vertical line series for RadChart</description>
      <returnType datatype="Telerik.UI.Chart.VerticalLineSeries" />
    </constructor>
    <properties>
      <property name="type" datatype="String" required="false" readonly="true">
        <description type="text/plain">Gets the type of the series.</description>
      </property>
      <property name="axis" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name of the value axis to use. Defaults to the primary axis.</description>
      </property>
      <property name="dashType" datatype="String" required="false">
        <description type="text/plain">Gets or sets the dash type of the line.</description>
        <options>
          <option value="solid">solid</option>
          <option value="dot">dot</option>
          <option value="dash">dash</option>
          <option value="longDash">longDash</option>
          <option value="dashDot">dashDot</option>
          <option value="longDashDot">longDashDot</option>
          <option value="longDashDotDot">longDashDotDot</option>
        </options>
      </property>
      <property name="markers" datatype="Telerik.UI.Chart._SeriesMarkersConfiguration" required="false">
        <description type="text/plain">Gets the marker settings for the line series.</description>
      </property>
      <property name="missingValues" datatype="String" required="false" defaultValue="gap">
        <description type="text/plain">Gets or sets the behavior for handling missing values in line series. Accepted values are: "gap" - the line stops before missing point and continues after it; "interpolate" - the value is interpolated from neighboring points; "zero" - the value is assumed to be zero. Default is "gap".</description>
        <options>
          <option value="gap">gap</option>
          <option value="interpolate">interpolate</option>
          <option value="zero">zero</option>
        </options>
      </property>
      <property name="width" datatype="Number" required="false" defaultValue="4">
        <description type="text/plain">Gets or sets the line width for this series.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color with which this series is displayed on the plot area.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for this series.</description>
      </property>
      <property name="labels" datatype="Telerik.UI.Chart._LabelConfiguration" required="false">
        <description type="text/plain">Gets or sets the settings for the series data labels.</description>
      </property>
      <property name="stack" datatype="Boolean" required="false">
        <description type="text/plain">Indicates whether the series should be stacked.</description>
      </property>
      <property name="tooltip" datatype="Telerik.UI.Chart._TooltipConfiguration" required="false">
        <description type="text/plain">Retrieves the tooltip settings for this series.</description>
      </property>
      <property name="data" datatype="Array" required="false">
        <description type="text/plain">Gets or sets the array of data points for this series.</description>
      </property>
      <property name="field" datatype="String" required="false">
        <description type="text/plain">Gets or sets the data field containing the series value.</description>
      </property>
      <property name="groupNameTemplate" datatype="String" required="false">
        <description type="text/plain">Gets or sets the name template for auto-generated series when binding to grouped data. Template variables: series, group, group.field, group.value.</description>
      </property>
      <property name="name" datatype="String" required="false">
        <description type="text/plain">Gets or sets the series name visible in the legend.</description>
      </property>
      <property name="visibleInLegend" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Indicates whether to show the series in the legend.</description>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets series opacity.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Common._BorderConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of a border.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of a border.</description>
      <returnType datatype="Telerik.UI.Common._BorderConfiguration" />
    </constructor>
    <properties>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color of the border.</description>
      </property>
      <property name="dashType" datatype="String" required="false" defaultValue="solid">
        <description type="text/plain">Gets or sets the dash type of the border. Accepted valies are: "solid", "dot", "dash", "longDash", "dashDot", "longDashDot", "longDashDotDot"</description>
        <options>
          <option value="solid">solid</option>
          <option value="dot">dot</option>
          <option value="dash">dash</option>
          <option value="longDash">longDash</option>
          <option value="dashDot">dashDot</option>
          <option value="longDashDot">longDashDot</option>
          <option value="longDashDotDot">longDashDotDot</option>
        </options>
      </property>
      <property name="width" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the width of the border in pixels.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Common._BoxConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of a bounding box such as padding or margin.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of a bounding box such as padding or margin.</description>
      <returnType datatype="Telerik.UI.Common._BoxConfiguration" />
    </constructor>
    <properties>
      <property name="left" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the left value.</description>
      </property>
      <property name="right" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the right value.</description>
      </property>
      <property name="top" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the top value.</description>
      </property>
      <property name="bottom" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the bottom value.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Gauge._LabelConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the gauge labels.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the gauge labels.</description>
      <returnType datatype="Telerik.UI.Gauge._LabelConfiguration" />
    </constructor>
    <properties>
      <property name="background" datatype="String" required="false">
        <description type="text/plain">Gets or sets the background of the gauge labels. Any valid CSS color string is accepted.</description>
      </property>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings of the gauge labels.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the text color of the gauge labels. Any valid CSS color string is accepted.</description>
      </property>
      <property name="font" datatype="String" required="false">
        <description type="text/plain">Gets or sets the font style of the gauge labels.</description>
      </property>
      <property name="format" datatype="String" required="false">
        <description type="text/plain">Gets or sets the format of the gauge labels.</description>
      </property>
      <property name="margin" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Retrieves the margin settings of the gauge labels.</description>
      </property>
      <property name="padding" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Retrieves the padding settings of the gauge labels.</description>
      </property>
      <property name="template" datatype="String" required="false">
        <description type="text/plain">Gets or sets the template of the gauge labels.</description>
      </property>
      <property name="visible" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the visibility of the gauge labels. Default value is true.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Gauge._TickConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the gauge ticks.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the gauge ticks.</description>
      <returnType datatype="Telerik.UI.Gauge._TickConfiguration" />
    </constructor>
    <properties>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color of the ticks. Any valid CSS color string is accepted.</description>
      </property>
      <property name="size" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the tick length in pixels.</description>
      </property>
      <property name="visible" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets the visibility of the ticks. Default is true.</description>
      </property>
      <property name="width" datatype="Number" required="false" defaultValue="0.5">
        <description type="text/plain">Gets or sets the width of the ticks in pixels. Default is 0.5</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Gauge._RadialPointerConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the radial gauge pointer.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the radial gauge pointer.</description>
      <returnType datatype="Telerik.UI.Gauge._RadialPointerConfiguration" />
    </constructor>
    <properties>
      <property name="capSize" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the size of the value in percents (from 0 to 1).</description>
      </property>
      <property name="capColor" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color of the pointer cap. Any valid CSS color string is accepted.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color of the pointer. Any valid CSS color string is accepted.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Gauge._LinearPointerTrackConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the linear pointer track.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the linear pointer track.</description>
      <returnType datatype="Telerik.UI.Gauge._LinearPointerTrackConfiguration" />
    </constructor>
    <properties>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for the gauge pointer track.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color of the pointer track. Any valid CSS color string is accepted.</description>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets the opacity of the pointer track.</description>
      </property>
      <property name="size" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the size of the pointer track.</description>
      </property>
      <property name="visible" datatype="Boolean" required="false">
        <description type="text/plain">Gets or sets the visibility of the pointer track.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Gauge._LinearPointerConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the linear gauge pointer.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the linear gauge pointer.</description>
      <returnType datatype="Telerik.UI.Gauge._LinearPointerConfiguration" />
    </constructor>
    <properties>
      <property name="border" datatype="Telerik.UI.Common._BorderConfiguration" required="false">
        <description type="text/plain">Gets the border settings for the gauge pointer.</description>
      </property>
      <property name="color" datatype="String" required="false">
        <description type="text/plain">Gets or sets the color of pointer. Any valid CSS color string is accepted.</description>
      </property>
      <property name="margin" datatype="Telerik.UI.Common._BoxConfiguration" required="false">
        <description type="text/plain">Gets the margin settings of the pointer.</description>
      </property>
      <property name="opacity" datatype="Number" required="false" defaultValue="1">
        <description type="text/plain">Gets or sets the opacity of the pointer. Default value is 1.</description>
      </property>
      <property name="shape" datatype="String" required="false" defaultValue="barIndicator">
        <description type="text/plain">Gets or sets the shape of the pointer. Possible values are "barIndicator" and "arrow". Default is "barIndicator."</description>
        <options>
          <option value="barIndicator">barIndicator</option>
          <option value="arrow">arrow</option>
        </options>
      </property>
      <property name="size" datatype="Number" required="false">
        <description type="text/plain">Gets or sets the size of the pointer.</description>
      </property>
      <property name="track" datatype="Telerik.UI.Gauge._LinearPointerTrackConfiguration" required="false">
        <description type="text/plain">Retrieves the settings for the pointer track.</description>
      </property>
    </properties>
  </class>
  <class name="Telerik.UI.Slider._TooltipConfiguration">
    <ancestor datatype="Telerik.UI._ControlConfiguration" />
    <description type="text/plain">For internal usage only. Describes the properties of the slider tooltip.</description>
    <constructor>
      <description type="text/plain">For internal usage only. Describes the properties of the slider tooltip.</description>
      <returnType datatype="Telerik.UI.Slider._TooltipConfiguration" />
    </constructor>
    <properties>
      <property name="enabled" datatype="Boolean" required="false" defaultValue="true">
        <description type="text/plain">Gets or sets the enabled state of the slider tooltip.</description>
      </property>
      <property name="format" datatype="String" required="false" defaultValue="{0}">
        <description type="text/plain">Gets or sets the format of the slider tooltip. If a tooltip template is set, the value of this property will be ignored and the template will be used instead.</description>
      </property>
      <property name="template" datatype="String" required="false">
        <description type="text/plain">Gets or sets the template string that will be used for the content of the slider tooltip. A non-empty value for this property overrides the tooltip format when the tooltip is shown.</description>
      </property>
    </properties>
  </class>
</api>